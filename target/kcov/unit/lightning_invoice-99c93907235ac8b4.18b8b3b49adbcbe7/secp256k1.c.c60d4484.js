var data = {lines:[
{"lineNum":"    1","line":"/**********************************************************************"},
{"lineNum":"    2","line":" * Copyright (c) 2013-2015 Pieter Wuille                              *"},
{"lineNum":"    3","line":" * Distributed under the MIT software license, see the accompanying   *"},
{"lineNum":"    4","line":" * file COPYING or http://www.opensource.org/licenses/mit-license.php.*"},
{"lineNum":"    5","line":" **********************************************************************/"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"#include \"include/secp256k1.h\""},
{"lineNum":"    8","line":"#include \"include/secp256k1_preallocated.h\""},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#include \"util.h\""},
{"lineNum":"   11","line":"#include \"num_impl.h\""},
{"lineNum":"   12","line":"#include \"field_impl.h\""},
{"lineNum":"   13","line":"#include \"scalar_impl.h\""},
{"lineNum":"   14","line":"#include \"group_impl.h\""},
{"lineNum":"   15","line":"#include \"ecmult_impl.h\""},
{"lineNum":"   16","line":"#include \"ecmult_const_impl.h\""},
{"lineNum":"   17","line":"#include \"ecmult_gen_impl.h\""},
{"lineNum":"   18","line":"#include \"ecdsa_impl.h\""},
{"lineNum":"   19","line":"#include \"eckey_impl.h\""},
{"lineNum":"   20","line":"#include \"hash_impl.h\""},
{"lineNum":"   21","line":"#include \"scratch_impl.h\""},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"#define ARG_CHECK(cond) do { \\"},
{"lineNum":"   24","line":"    if (EXPECT(!(cond), 0)) { \\"},
{"lineNum":"   25","line":"        secp256k1_callback_call(&ctx->illegal_callback, #cond); \\"},
{"lineNum":"   26","line":"        return 0; \\"},
{"lineNum":"   27","line":"    } \\"},
{"lineNum":"   28","line":"} while(0)"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"#define ARG_CHECK_NO_RETURN(cond) do { \\"},
{"lineNum":"   31","line":"    if (EXPECT(!(cond), 0)) { \\"},
{"lineNum":"   32","line":"        secp256k1_callback_call(&ctx->illegal_callback, #cond); \\"},
{"lineNum":"   33","line":"    } \\"},
{"lineNum":"   34","line":"} while(0)"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"#ifndef USE_EXTERNAL_DEFAULT_CALLBACKS"},
{"lineNum":"   37","line":"#include <stdlib.h>"},
{"lineNum":"   38","line":"#include <stdio.h>"},
{"lineNum":"   39","line":"static void secp256k1_default_illegal_callback_fn(const char* str, void* data) {"},
{"lineNum":"   40","line":"    (void)data;"},
{"lineNum":"   41","line":"    fprintf(stderr, \"[libsecp256k1] illegal argument: %s\\n\", str);"},
{"lineNum":"   42","line":"    abort();"},
{"lineNum":"   43","line":"}"},
{"lineNum":"   44","line":"static void secp256k1_default_error_callback_fn(const char* str, void* data) {"},
{"lineNum":"   45","line":"    (void)data;"},
{"lineNum":"   46","line":"    fprintf(stderr, \"[libsecp256k1] internal consistency check failed: %s\\n\", str);"},
{"lineNum":"   47","line":"    abort();"},
{"lineNum":"   48","line":"}"},
{"lineNum":"   49","line":"#else"},
{"lineNum":"   50","line":"void secp256k1_default_illegal_callback_fn(const char* str, void* data);"},
{"lineNum":"   51","line":"void secp256k1_default_error_callback_fn(const char* str, void* data);"},
{"lineNum":"   52","line":"#endif"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"static const secp256k1_callback default_illegal_callback = {"},
{"lineNum":"   55","line":"    secp256k1_default_illegal_callback_fn,"},
{"lineNum":"   56","line":"    NULL"},
{"lineNum":"   57","line":"};"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"static const secp256k1_callback default_error_callback = {"},
{"lineNum":"   60","line":"    secp256k1_default_error_callback_fn,"},
{"lineNum":"   61","line":"    NULL"},
{"lineNum":"   62","line":"};"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"struct secp256k1_context_struct {"},
{"lineNum":"   65","line":"    secp256k1_ecmult_context ecmult_ctx;"},
{"lineNum":"   66","line":"    secp256k1_ecmult_gen_context ecmult_gen_ctx;"},
{"lineNum":"   67","line":"    secp256k1_callback illegal_callback;"},
{"lineNum":"   68","line":"    secp256k1_callback error_callback;"},
{"lineNum":"   69","line":"};"},
{"lineNum":"   70","line":""},
{"lineNum":"   71","line":"static const secp256k1_context secp256k1_context_no_precomp_ = {"},
{"lineNum":"   72","line":"    { 0 },"},
{"lineNum":"   73","line":"    { 0 },"},
{"lineNum":"   74","line":"    { secp256k1_default_illegal_callback_fn, 0 },"},
{"lineNum":"   75","line":"    { secp256k1_default_error_callback_fn, 0 }"},
{"lineNum":"   76","line":"};"},
{"lineNum":"   77","line":"const secp256k1_context *secp256k1_context_no_precomp = &secp256k1_context_no_precomp_;"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"size_t secp256k1_context_preallocated_size(unsigned int flags) {","class":"lineCov","hits":"1","order":"4014","possible_hits":"1",},
{"lineNum":"   80","line":"    size_t ret = ROUND_TO_ALIGN(sizeof(secp256k1_context));","class":"lineCov","hits":"1","order":"4015","possible_hits":"1",},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"    if (EXPECT((flags & SECP256K1_FLAGS_TYPE_MASK) != SECP256K1_FLAGS_TYPE_CONTEXT, 0)) {","class":"lineCov","hits":"1","order":"4016","possible_hits":"1",},
{"lineNum":"   83","line":"            secp256k1_callback_call(&default_illegal_callback,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   84","line":"                                    \"Invalid flags\");"},
{"lineNum":"   85","line":"            return 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":"    }"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    if (flags & SECP256K1_FLAGS_BIT_CONTEXT_SIGN) {","class":"lineCov","hits":"1","order":"4017","possible_hits":"1",},
{"lineNum":"   89","line":"        ret += SECP256K1_ECMULT_GEN_CONTEXT_PREALLOCATED_SIZE;","class":"lineCov","hits":"1","order":"4018","possible_hits":"1",},
{"lineNum":"   90","line":"    }"},
{"lineNum":"   91","line":"    if (flags & SECP256K1_FLAGS_BIT_CONTEXT_VERIFY) {","class":"lineCov","hits":"1","order":"4019","possible_hits":"1",},
{"lineNum":"   92","line":"        ret += SECP256K1_ECMULT_CONTEXT_PREALLOCATED_SIZE;","class":"lineCov","hits":"1","order":"4020","possible_hits":"1",},
{"lineNum":"   93","line":"    }"},
{"lineNum":"   94","line":"    return ret;","class":"lineCov","hits":"1","order":"4021","possible_hits":"1",},
{"lineNum":"   95","line":"}","class":"linePartCov","hits":"1","order":"4022","possible_hits":"2",},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"size_t secp256k1_context_preallocated_clone_size(const secp256k1_context* ctx) {"},
{"lineNum":"   98","line":"    size_t ret = ROUND_TO_ALIGN(sizeof(secp256k1_context));"},
{"lineNum":"   99","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  100","line":"    if (secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx)) {"},
{"lineNum":"  101","line":"        ret += SECP256K1_ECMULT_GEN_CONTEXT_PREALLOCATED_SIZE;"},
{"lineNum":"  102","line":"    }"},
{"lineNum":"  103","line":"    if (secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx)) {"},
{"lineNum":"  104","line":"        ret += SECP256K1_ECMULT_CONTEXT_PREALLOCATED_SIZE;"},
{"lineNum":"  105","line":"    }"},
{"lineNum":"  106","line":"    return ret;"},
{"lineNum":"  107","line":"}"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"secp256k1_context* secp256k1_context_preallocated_create(void* prealloc, unsigned int flags) {","class":"lineCov","hits":"1","order":"4121","possible_hits":"1",},
{"lineNum":"  110","line":"    void* const base = prealloc;","class":"lineCov","hits":"1","order":"4122","possible_hits":"1",},
{"lineNum":"  111","line":"    size_t prealloc_size;"},
{"lineNum":"  112","line":"    secp256k1_context* ret;"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"    VERIFY_CHECK(prealloc != NULL);"},
{"lineNum":"  115","line":"    prealloc_size = secp256k1_context_preallocated_size(flags);","class":"lineCov","hits":"1","order":"4123","possible_hits":"1",},
{"lineNum":"  116","line":"    ret = (secp256k1_context*)manual_alloc(&prealloc, sizeof(secp256k1_context), base, prealloc_size);","class":"lineCov","hits":"1","order":"4124","possible_hits":"1",},
{"lineNum":"  117","line":"    ret->illegal_callback = default_illegal_callback;","class":"lineCov","hits":"1","order":"4132","possible_hits":"1",},
{"lineNum":"  118","line":"    ret->error_callback = default_error_callback;","class":"lineCov","hits":"1","order":"4133","possible_hits":"1",},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"    if (EXPECT((flags & SECP256K1_FLAGS_TYPE_MASK) != SECP256K1_FLAGS_TYPE_CONTEXT, 0)) {","class":"lineCov","hits":"1","order":"4134","possible_hits":"1",},
{"lineNum":"  121","line":"            secp256k1_callback_call(&ret->illegal_callback,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  122","line":"                                    \"Invalid flags\");"},
{"lineNum":"  123","line":"            return NULL;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"    }"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"    secp256k1_ecmult_context_init(&ret->ecmult_ctx);","class":"lineCov","hits":"1","order":"4135","possible_hits":"1",},
{"lineNum":"  127","line":"    secp256k1_ecmult_gen_context_init(&ret->ecmult_gen_ctx);","class":"lineCov","hits":"1","order":"4141","possible_hits":"1",},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    if (flags & SECP256K1_FLAGS_BIT_CONTEXT_SIGN) {","class":"lineCov","hits":"1","order":"4145","possible_hits":"1",},
{"lineNum":"  130","line":"        secp256k1_ecmult_gen_context_build(&ret->ecmult_gen_ctx, &prealloc);","class":"lineCov","hits":"1","order":"4146","possible_hits":"1",},
{"lineNum":"  131","line":"    }"},
{"lineNum":"  132","line":"    if (flags & SECP256K1_FLAGS_BIT_CONTEXT_VERIFY) {","class":"lineCov","hits":"1","order":"4830","possible_hits":"1",},
{"lineNum":"  133","line":"        secp256k1_ecmult_context_build(&ret->ecmult_ctx, &prealloc);","class":"lineCov","hits":"1","order":"4831","possible_hits":"1",},
{"lineNum":"  134","line":"    }"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"    return (secp256k1_context*) ret;","class":"lineCov","hits":"1","order":"5019","possible_hits":"1",},
{"lineNum":"  137","line":"}","class":"linePartCov","hits":"1","order":"5020","possible_hits":"2",},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"secp256k1_context* secp256k1_context_preallocated_clone(const secp256k1_context* ctx, void* prealloc) {"},
{"lineNum":"  140","line":"    size_t prealloc_size;"},
{"lineNum":"  141","line":"    secp256k1_context* ret;"},
{"lineNum":"  142","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  143","line":"    ARG_CHECK(prealloc != NULL);"},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"    prealloc_size = secp256k1_context_preallocated_clone_size(ctx);"},
{"lineNum":"  146","line":"    ret = (secp256k1_context*)prealloc;"},
{"lineNum":"  147","line":"    memcpy(ret, ctx, prealloc_size);"},
{"lineNum":"  148","line":"    secp256k1_ecmult_gen_context_finalize_memcpy(&ret->ecmult_gen_ctx, &ctx->ecmult_gen_ctx);"},
{"lineNum":"  149","line":"    secp256k1_ecmult_context_finalize_memcpy(&ret->ecmult_ctx, &ctx->ecmult_ctx);"},
{"lineNum":"  150","line":"    return ret;"},
{"lineNum":"  151","line":"}"},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"void secp256k1_context_preallocated_destroy(secp256k1_context* ctx) {","class":"lineCov","hits":"1","order":"5865","possible_hits":"1",},
{"lineNum":"  154","line":"    ARG_CHECK_NO_RETURN(ctx != secp256k1_context_no_precomp);","class":"lineCov","hits":"1","order":"5866","possible_hits":"1",},
{"lineNum":"  155","line":"    if (ctx != NULL) {","class":"lineCov","hits":"1","order":"5867","possible_hits":"1",},
{"lineNum":"  156","line":"        secp256k1_ecmult_context_clear(&ctx->ecmult_ctx);","class":"lineCov","hits":"1","order":"5868","possible_hits":"1",},
{"lineNum":"  157","line":"        secp256k1_ecmult_gen_context_clear(&ctx->ecmult_gen_ctx);","class":"lineCov","hits":"1","order":"5872","possible_hits":"1",},
{"lineNum":"  158","line":"    }"},
{"lineNum":"  159","line":"}","class":"linePartCov","hits":"1","order":"5878","possible_hits":"2",},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"void secp256k1_context_set_illegal_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {"},
{"lineNum":"  162","line":"    ARG_CHECK_NO_RETURN(ctx != secp256k1_context_no_precomp);"},
{"lineNum":"  163","line":"    if (fun == NULL) {"},
{"lineNum":"  164","line":"        fun = secp256k1_default_illegal_callback_fn;"},
{"lineNum":"  165","line":"    }"},
{"lineNum":"  166","line":"    ctx->illegal_callback.fn = fun;"},
{"lineNum":"  167","line":"    ctx->illegal_callback.data = data;"},
{"lineNum":"  168","line":"}"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"void secp256k1_context_set_error_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {"},
{"lineNum":"  171","line":"    ARG_CHECK_NO_RETURN(ctx != secp256k1_context_no_precomp);"},
{"lineNum":"  172","line":"    if (fun == NULL) {"},
{"lineNum":"  173","line":"        fun = secp256k1_default_error_callback_fn;"},
{"lineNum":"  174","line":"    }"},
{"lineNum":"  175","line":"    ctx->error_callback.fn = fun;"},
{"lineNum":"  176","line":"    ctx->error_callback.data = data;"},
{"lineNum":"  177","line":"}"},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"static int secp256k1_pubkey_load(const secp256k1_context* ctx, secp256k1_ge* ge, const secp256k1_pubkey* pubkey) {","class":"lineCov","hits":"2","order":"5179","possible_hits":"2",},
{"lineNum":"  180","line":"    if (sizeof(secp256k1_ge_storage) == 64) {"},
{"lineNum":"  181","line":"        /* When the secp256k1_ge_storage type is exactly 64 byte, use its"},
{"lineNum":"  182","line":"         * representation inside secp256k1_pubkey, as conversion is very fast."},
{"lineNum":"  183","line":"         * Note that secp256k1_pubkey_save must use the same representation. */"},
{"lineNum":"  184","line":"        secp256k1_ge_storage s;"},
{"lineNum":"  185","line":"        memcpy(&s, &pubkey->data[0], sizeof(s));","class":"lineCov","hits":"1","order":"5180","possible_hits":"1",},
{"lineNum":"  186","line":"        secp256k1_ge_from_storage(ge, &s);","class":"lineCov","hits":"1","order":"5181","possible_hits":"1",},
{"lineNum":"  187","line":"    } else {"},
{"lineNum":"  188","line":"        /* Otherwise, fall back to 32-byte big endian for X and Y. */"},
{"lineNum":"  189","line":"        secp256k1_fe x, y;"},
{"lineNum":"  190","line":"        secp256k1_fe_set_b32(&x, pubkey->data);"},
{"lineNum":"  191","line":"        secp256k1_fe_set_b32(&y, pubkey->data + 32);"},
{"lineNum":"  192","line":"        secp256k1_ge_set_xy(ge, &x, &y);"},
{"lineNum":"  193","line":"    }"},
{"lineNum":"  194","line":"    ARG_CHECK(!secp256k1_fe_is_zero(&ge->x));","class":"lineCov","hits":"1","order":"5182","possible_hits":"1",},
{"lineNum":"  195","line":"    return 1;","class":"lineCov","hits":"1","order":"5183","possible_hits":"1",},
{"lineNum":"  196","line":"}","class":"linePartCov","hits":"1","order":"5184","possible_hits":"2",},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"static void secp256k1_pubkey_save(secp256k1_pubkey* pubkey, secp256k1_ge* ge) {","class":"lineCov","hits":"2","order":"2613","possible_hits":"2",},
{"lineNum":"  199","line":"    if (sizeof(secp256k1_ge_storage) == 64) {"},
{"lineNum":"  200","line":"        secp256k1_ge_storage s;"},
{"lineNum":"  201","line":"        secp256k1_ge_to_storage(&s, ge);","class":"lineCov","hits":"1","order":"2614","possible_hits":"1",},
{"lineNum":"  202","line":"        memcpy(&pubkey->data[0], &s, sizeof(s));","class":"lineCov","hits":"1","order":"2647","possible_hits":"1",},
{"lineNum":"  203","line":"    } else {"},
{"lineNum":"  204","line":"        VERIFY_CHECK(!secp256k1_ge_is_infinity(ge));"},
{"lineNum":"  205","line":"        secp256k1_fe_normalize_var(&ge->x);"},
{"lineNum":"  206","line":"        secp256k1_fe_normalize_var(&ge->y);"},
{"lineNum":"  207","line":"        secp256k1_fe_get_b32(pubkey->data, &ge->x);"},
{"lineNum":"  208","line":"        secp256k1_fe_get_b32(pubkey->data + 32, &ge->y);"},
{"lineNum":"  209","line":"    }"},
{"lineNum":"  210","line":"}","class":"linePartCov","hits":"1","order":"2648","possible_hits":"2",},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"int secp256k1_ec_pubkey_parse(const secp256k1_context* ctx, secp256k1_pubkey* pubkey, const unsigned char *input, size_t inputlen) {","class":"lineCov","hits":"2","order":"2349","possible_hits":"2",},
{"lineNum":"  213","line":"    secp256k1_ge Q;"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  216","line":"    ARG_CHECK(pubkey != NULL);","class":"lineCov","hits":"1","order":"2350","possible_hits":"1",},
{"lineNum":"  217","line":"    memset(pubkey, 0, sizeof(*pubkey));","class":"lineCov","hits":"1","order":"2351","possible_hits":"1",},
{"lineNum":"  218","line":"    ARG_CHECK(input != NULL);","class":"lineCov","hits":"1","order":"2352","possible_hits":"1",},
{"lineNum":"  219","line":"    if (!secp256k1_eckey_pubkey_parse(&Q, input, inputlen)) {","class":"lineCov","hits":"1","order":"2353","possible_hits":"1",},
{"lineNum":"  220","line":"        return 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  221","line":"    }"},
{"lineNum":"  222","line":"    secp256k1_pubkey_save(pubkey, &Q);","class":"lineCov","hits":"1","order":"2612","possible_hits":"1",},
{"lineNum":"  223","line":"    secp256k1_ge_clear(&Q);","class":"lineCov","hits":"1","order":"2649","possible_hits":"1",},
{"lineNum":"  224","line":"    return 1;","class":"lineCov","hits":"1","order":"2659","possible_hits":"1",},
{"lineNum":"  225","line":"}","class":"lineCov","hits":"1","order":"2660","possible_hits":"1",},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"int secp256k1_ec_pubkey_serialize(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_pubkey* pubkey, unsigned int flags) {","class":"lineCov","hits":"2","order":"5168","possible_hits":"2",},
{"lineNum":"  228","line":"    secp256k1_ge Q;"},
{"lineNum":"  229","line":"    size_t len;"},
{"lineNum":"  230","line":"    int ret = 0;","class":"lineCov","hits":"1","order":"5169","possible_hits":"1",},
{"lineNum":"  231","line":""},
{"lineNum":"  232","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  233","line":"    ARG_CHECK(outputlen != NULL);","class":"lineCov","hits":"1","order":"5170","possible_hits":"1",},
{"lineNum":"  234","line":"    ARG_CHECK(*outputlen >= ((flags & SECP256K1_FLAGS_BIT_COMPRESSION) ? 33 : 65));","class":"lineCov","hits":"1","order":"5171","possible_hits":"1",},
{"lineNum":"  235","line":"    len = *outputlen;","class":"lineCov","hits":"1","order":"5172","possible_hits":"1",},
{"lineNum":"  236","line":"    *outputlen = 0;","class":"lineCov","hits":"1","order":"5173","possible_hits":"1",},
{"lineNum":"  237","line":"    ARG_CHECK(output != NULL);","class":"lineCov","hits":"1","order":"5174","possible_hits":"1",},
{"lineNum":"  238","line":"    memset(output, 0, len);","class":"lineCov","hits":"1","order":"5175","possible_hits":"1",},
{"lineNum":"  239","line":"    ARG_CHECK(pubkey != NULL);","class":"lineCov","hits":"1","order":"5176","possible_hits":"1",},
{"lineNum":"  240","line":"    ARG_CHECK((flags & SECP256K1_FLAGS_TYPE_MASK) == SECP256K1_FLAGS_TYPE_COMPRESSION);","class":"lineCov","hits":"1","order":"5177","possible_hits":"1",},
{"lineNum":"  241","line":"    if (secp256k1_pubkey_load(ctx, &Q, pubkey)) {","class":"lineCov","hits":"1","order":"5178","possible_hits":"1",},
{"lineNum":"  242","line":"        ret = secp256k1_eckey_pubkey_serialize(&Q, output, &len, flags & SECP256K1_FLAGS_BIT_COMPRESSION);","class":"lineCov","hits":"1","order":"5185","possible_hits":"1",},
{"lineNum":"  243","line":"        if (ret) {","class":"lineCov","hits":"1","order":"5233","possible_hits":"1",},
{"lineNum":"  244","line":"            *outputlen = len;","class":"lineCov","hits":"1","order":"5234","possible_hits":"1",},
{"lineNum":"  245","line":"        }"},
{"lineNum":"  246","line":"    }"},
{"lineNum":"  247","line":"    return ret;","class":"lineCov","hits":"1","order":"5235","possible_hits":"1",},
{"lineNum":"  248","line":"}","class":"lineCov","hits":"1","order":"5236","possible_hits":"1",},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":"static void secp256k1_ecdsa_signature_load(const secp256k1_context* ctx, secp256k1_scalar* r, secp256k1_scalar* s, const secp256k1_ecdsa_signature* sig) {","class":"lineCov","hits":"1","order":"5939","possible_hits":"1",},
{"lineNum":"  251","line":"    (void)ctx;"},
{"lineNum":"  252","line":"    if (sizeof(secp256k1_scalar) == 32) {"},
{"lineNum":"  253","line":"        /* When the secp256k1_scalar type is exactly 32 byte, use its"},
{"lineNum":"  254","line":"         * representation inside secp256k1_ecdsa_signature, as conversion is very fast."},
{"lineNum":"  255","line":"         * Note that secp256k1_ecdsa_signature_save must use the same representation. */"},
{"lineNum":"  256","line":"        memcpy(r, &sig->data[0], 32);","class":"lineCov","hits":"1","order":"5940","possible_hits":"1",},
{"lineNum":"  257","line":"        memcpy(s, &sig->data[32], 32);","class":"lineCov","hits":"1","order":"5941","possible_hits":"1",},
{"lineNum":"  258","line":"    } else {"},
{"lineNum":"  259","line":"        secp256k1_scalar_set_b32(r, &sig->data[0], NULL);"},
{"lineNum":"  260","line":"        secp256k1_scalar_set_b32(s, &sig->data[32], NULL);"},
{"lineNum":"  261","line":"    }"},
{"lineNum":"  262","line":"}","class":"linePartCov","hits":"1","order":"5942","possible_hits":"2",},
{"lineNum":"  263","line":""},
{"lineNum":"  264","line":"static void secp256k1_ecdsa_signature_save(secp256k1_ecdsa_signature* sig, const secp256k1_scalar* r, const secp256k1_scalar* s) {","class":"lineCov","hits":"1","order":"5916","possible_hits":"1",},
{"lineNum":"  265","line":"    if (sizeof(secp256k1_scalar) == 32) {"},
{"lineNum":"  266","line":"        memcpy(&sig->data[0], r, 32);","class":"lineCov","hits":"1","order":"5917","possible_hits":"1",},
{"lineNum":"  267","line":"        memcpy(&sig->data[32], s, 32);","class":"lineCov","hits":"1","order":"5918","possible_hits":"1",},
{"lineNum":"  268","line":"    } else {"},
{"lineNum":"  269","line":"        secp256k1_scalar_get_b32(&sig->data[0], r);"},
{"lineNum":"  270","line":"        secp256k1_scalar_get_b32(&sig->data[32], s);"},
{"lineNum":"  271","line":"    }"},
{"lineNum":"  272","line":"}","class":"linePartCov","hits":"1","order":"5919","possible_hits":"2",},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"int secp256k1_ecdsa_signature_parse_der(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {"},
{"lineNum":"  275","line":"    secp256k1_scalar r, s;"},
{"lineNum":"  276","line":""},
{"lineNum":"  277","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  278","line":"    ARG_CHECK(sig != NULL);"},
{"lineNum":"  279","line":"    ARG_CHECK(input != NULL);"},
{"lineNum":"  280","line":""},
{"lineNum":"  281","line":"    if (secp256k1_ecdsa_sig_parse(&r, &s, input, inputlen)) {"},
{"lineNum":"  282","line":"        secp256k1_ecdsa_signature_save(sig, &r, &s);"},
{"lineNum":"  283","line":"        return 1;"},
{"lineNum":"  284","line":"    } else {"},
{"lineNum":"  285","line":"        memset(sig, 0, sizeof(*sig));"},
{"lineNum":"  286","line":"        return 0;"},
{"lineNum":"  287","line":"    }"},
{"lineNum":"  288","line":"}"},
{"lineNum":"  289","line":""},
{"lineNum":"  290","line":"int secp256k1_ecdsa_signature_parse_compact(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input64) {"},
{"lineNum":"  291","line":"    secp256k1_scalar r, s;"},
{"lineNum":"  292","line":"    int ret = 1;"},
{"lineNum":"  293","line":"    int overflow = 0;"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  296","line":"    ARG_CHECK(sig != NULL);"},
{"lineNum":"  297","line":"    ARG_CHECK(input64 != NULL);"},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":"    secp256k1_scalar_set_b32(&r, &input64[0], &overflow);"},
{"lineNum":"  300","line":"    ret &= !overflow;"},
{"lineNum":"  301","line":"    secp256k1_scalar_set_b32(&s, &input64[32], &overflow);"},
{"lineNum":"  302","line":"    ret &= !overflow;"},
{"lineNum":"  303","line":"    if (ret) {"},
{"lineNum":"  304","line":"        secp256k1_ecdsa_signature_save(sig, &r, &s);"},
{"lineNum":"  305","line":"    } else {"},
{"lineNum":"  306","line":"        memset(sig, 0, sizeof(*sig));"},
{"lineNum":"  307","line":"    }"},
{"lineNum":"  308","line":"    return ret;"},
{"lineNum":"  309","line":"}"},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":"int secp256k1_ecdsa_signature_serialize_der(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_ecdsa_signature* sig) {"},
{"lineNum":"  312","line":"    secp256k1_scalar r, s;"},
{"lineNum":"  313","line":""},
{"lineNum":"  314","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  315","line":"    ARG_CHECK(output != NULL);"},
{"lineNum":"  316","line":"    ARG_CHECK(outputlen != NULL);"},
{"lineNum":"  317","line":"    ARG_CHECK(sig != NULL);"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"    secp256k1_ecdsa_signature_load(ctx, &r, &s, sig);"},
{"lineNum":"  320","line":"    return secp256k1_ecdsa_sig_serialize(output, outputlen, &r, &s);"},
{"lineNum":"  321","line":"}"},
{"lineNum":"  322","line":""},
{"lineNum":"  323","line":"int secp256k1_ecdsa_signature_serialize_compact(const secp256k1_context* ctx, unsigned char *output64, const secp256k1_ecdsa_signature* sig) {"},
{"lineNum":"  324","line":"    secp256k1_scalar r, s;"},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  327","line":"    ARG_CHECK(output64 != NULL);"},
{"lineNum":"  328","line":"    ARG_CHECK(sig != NULL);"},
{"lineNum":"  329","line":""},
{"lineNum":"  330","line":"    secp256k1_ecdsa_signature_load(ctx, &r, &s, sig);"},
{"lineNum":"  331","line":"    secp256k1_scalar_get_b32(&output64[0], &r);"},
{"lineNum":"  332","line":"    secp256k1_scalar_get_b32(&output64[32], &s);"},
{"lineNum":"  333","line":"    return 1;"},
{"lineNum":"  334","line":"}"},
{"lineNum":"  335","line":""},
{"lineNum":"  336","line":"int secp256k1_ecdsa_signature_normalize(const secp256k1_context* ctx, secp256k1_ecdsa_signature *sigout, const secp256k1_ecdsa_signature *sigin) {"},
{"lineNum":"  337","line":"    secp256k1_scalar r, s;"},
{"lineNum":"  338","line":"    int ret = 0;"},
{"lineNum":"  339","line":""},
{"lineNum":"  340","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  341","line":"    ARG_CHECK(sigin != NULL);"},
{"lineNum":"  342","line":""},
{"lineNum":"  343","line":"    secp256k1_ecdsa_signature_load(ctx, &r, &s, sigin);"},
{"lineNum":"  344","line":"    ret = secp256k1_scalar_is_high(&s);"},
{"lineNum":"  345","line":"    if (sigout != NULL) {"},
{"lineNum":"  346","line":"        if (ret) {"},
{"lineNum":"  347","line":"            secp256k1_scalar_negate(&s, &s);"},
{"lineNum":"  348","line":"        }"},
{"lineNum":"  349","line":"        secp256k1_ecdsa_signature_save(sigout, &r, &s);"},
{"lineNum":"  350","line":"    }"},
{"lineNum":"  351","line":""},
{"lineNum":"  352","line":"    return ret;"},
{"lineNum":"  353","line":"}"},
{"lineNum":"  354","line":""},
{"lineNum":"  355","line":"int secp256k1_ecdsa_verify(const secp256k1_context* ctx, const secp256k1_ecdsa_signature *sig, const unsigned char *msg32, const secp256k1_pubkey *pubkey) {","class":"lineCov","hits":"2","order":"5932","possible_hits":"2",},
{"lineNum":"  356","line":"    secp256k1_ge q;"},
{"lineNum":"  357","line":"    secp256k1_scalar r, s;"},
{"lineNum":"  358","line":"    secp256k1_scalar m;"},
{"lineNum":"  359","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  360","line":"    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));","class":"lineCov","hits":"1","order":"5933","possible_hits":"1",},
{"lineNum":"  361","line":"    ARG_CHECK(msg32 != NULL);","class":"lineCov","hits":"1","order":"5934","possible_hits":"1",},
{"lineNum":"  362","line":"    ARG_CHECK(sig != NULL);","class":"lineCov","hits":"1","order":"5935","possible_hits":"1",},
{"lineNum":"  363","line":"    ARG_CHECK(pubkey != NULL);","class":"lineCov","hits":"1","order":"5936","possible_hits":"1",},
{"lineNum":"  364","line":""},
{"lineNum":"  365","line":"    secp256k1_scalar_set_b32(&m, msg32, NULL);","class":"lineCov","hits":"1","order":"5937","possible_hits":"1",},
{"lineNum":"  366","line":"    secp256k1_ecdsa_signature_load(ctx, &r, &s, sig);","class":"lineCov","hits":"1","order":"5938","possible_hits":"1",},
{"lineNum":"  367","line":"    return (!secp256k1_scalar_is_high(&s) &&","class":"lineCov","hits":"3","order":"5943","possible_hits":"3",},
{"lineNum":"  368","line":"            secp256k1_pubkey_load(ctx, &q, pubkey) &&","class":"lineCov","hits":"2","order":"5944","possible_hits":"2",},
{"lineNum":"  369","line":"            secp256k1_ecdsa_sig_verify(&ctx->ecmult_ctx, &r, &s, &q, &m));","class":"lineCov","hits":"1","order":"5945","possible_hits":"1",},
{"lineNum":"  370","line":"}","class":"lineCov","hits":"1","order":"5987","possible_hits":"1",},
{"lineNum":"  371","line":""},
{"lineNum":"  372","line":"static SECP256K1_INLINE void buffer_append(unsigned char *buf, unsigned int *offset, const void *data, unsigned int len) {","class":"lineCov","hits":"1","order":"5316","possible_hits":"1",},
{"lineNum":"  373","line":"    memcpy(buf + *offset, data, len);","class":"lineCov","hits":"1","order":"5317","possible_hits":"1",},
{"lineNum":"  374","line":"    *offset += len;","class":"lineCov","hits":"1","order":"5318","possible_hits":"1",},
{"lineNum":"  375","line":"}","class":"linePartCov","hits":"1","order":"5319","possible_hits":"2",},
{"lineNum":"  376","line":""},
{"lineNum":"  377","line":"static int nonce_function_rfc6979(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {","class":"lineCov","hits":"2","order":"5313","possible_hits":"2",},
{"lineNum":"  378","line":"   unsigned char keydata[112];"},
{"lineNum":"  379","line":"   unsigned int offset = 0;","class":"lineCov","hits":"1","order":"5314","possible_hits":"1",},
{"lineNum":"  380","line":"   secp256k1_rfc6979_hmac_sha256 rng;"},
{"lineNum":"  381","line":"   unsigned int i;"},
{"lineNum":"  382","line":"   /* We feed a byte array to the PRNG as input, consisting of:"},
{"lineNum":"  383","line":"    * - the private key (32 bytes) and message (32 bytes), see RFC 6979 3.2d."},
{"lineNum":"  384","line":"    * - optionally 32 extra bytes of data, see RFC 6979 3.6 Additional Data."},
{"lineNum":"  385","line":"    * - optionally 16 extra bytes with the algorithm name."},
{"lineNum":"  386","line":"    * Because the arguments have distinct fixed lengths it is not possible for"},
{"lineNum":"  387","line":"    *  different argument mixtures to emulate each other and result in the same"},
{"lineNum":"  388","line":"    *  nonces."},
{"lineNum":"  389","line":"    */"},
{"lineNum":"  390","line":"   buffer_append(keydata, &offset, key32, 32);","class":"lineCov","hits":"1","order":"5315","possible_hits":"1",},
{"lineNum":"  391","line":"   buffer_append(keydata, &offset, msg32, 32);","class":"lineCov","hits":"1","order":"5320","possible_hits":"1",},
{"lineNum":"  392","line":"   if (data != NULL) {","class":"lineCov","hits":"1","order":"5321","possible_hits":"1",},
{"lineNum":"  393","line":"       buffer_append(keydata, &offset, data, 32);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  394","line":"   }"},
{"lineNum":"  395","line":"   if (algo16 != NULL) {","class":"lineCov","hits":"1","order":"5322","possible_hits":"1",},
{"lineNum":"  396","line":"       buffer_append(keydata, &offset, algo16, 16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  397","line":"   }"},
{"lineNum":"  398","line":"   secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, offset);","class":"lineCov","hits":"1","order":"5323","possible_hits":"1",},
{"lineNum":"  399","line":"   memset(keydata, 0, sizeof(keydata));","class":"lineCov","hits":"1","order":"5324","possible_hits":"1",},
{"lineNum":"  400","line":"   for (i = 0; i <= counter; i++) {","class":"lineCov","hits":"2","order":"5325","possible_hits":"2",},
{"lineNum":"  401","line":"       secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);","class":"lineCov","hits":"1","order":"5326","possible_hits":"1",},
{"lineNum":"  402","line":"   }"},
{"lineNum":"  403","line":"   secp256k1_rfc6979_hmac_sha256_finalize(&rng);","class":"lineCov","hits":"1","order":"5327","possible_hits":"1",},
{"lineNum":"  404","line":"   return 1;","class":"lineCov","hits":"1","order":"5328","possible_hits":"1",},
{"lineNum":"  405","line":"}","class":"linePartCov","hits":"1","order":"5329","possible_hits":"2",},
{"lineNum":"  406","line":""},
{"lineNum":"  407","line":"const secp256k1_nonce_function secp256k1_nonce_function_rfc6979 = nonce_function_rfc6979;"},
{"lineNum":"  408","line":"const secp256k1_nonce_function secp256k1_nonce_function_default = nonce_function_rfc6979;"},
{"lineNum":"  409","line":""},
{"lineNum":"  410","line":"int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature *signature, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {"},
{"lineNum":"  411","line":"    secp256k1_scalar r, s;"},
{"lineNum":"  412","line":"    secp256k1_scalar sec, non, msg;"},
{"lineNum":"  413","line":"    int ret = 0;"},
{"lineNum":"  414","line":"    int overflow = 0;"},
{"lineNum":"  415","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  416","line":"    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));"},
{"lineNum":"  417","line":"    ARG_CHECK(msg32 != NULL);"},
{"lineNum":"  418","line":"    ARG_CHECK(signature != NULL);"},
{"lineNum":"  419","line":"    ARG_CHECK(seckey != NULL);"},
{"lineNum":"  420","line":"    if (noncefp == NULL) {"},
{"lineNum":"  421","line":"        noncefp = secp256k1_nonce_function_default;"},
{"lineNum":"  422","line":"    }"},
{"lineNum":"  423","line":""},
{"lineNum":"  424","line":"    secp256k1_scalar_set_b32(&sec, seckey, &overflow);"},
{"lineNum":"  425","line":"    /* Fail if the secret key is invalid. */"},
{"lineNum":"  426","line":"    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {"},
{"lineNum":"  427","line":"        unsigned char nonce32[32];"},
{"lineNum":"  428","line":"        unsigned int count = 0;"},
{"lineNum":"  429","line":"        secp256k1_scalar_set_b32(&msg, msg32, NULL);"},
{"lineNum":"  430","line":"        while (1) {"},
{"lineNum":"  431","line":"            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);"},
{"lineNum":"  432","line":"            if (!ret) {"},
{"lineNum":"  433","line":"                break;"},
{"lineNum":"  434","line":"            }"},
{"lineNum":"  435","line":"            secp256k1_scalar_set_b32(&non, nonce32, &overflow);"},
{"lineNum":"  436","line":"            if (!overflow && !secp256k1_scalar_is_zero(&non)) {"},
{"lineNum":"  437","line":"                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {"},
{"lineNum":"  438","line":"                    break;"},
{"lineNum":"  439","line":"                }"},
{"lineNum":"  440","line":"            }"},
{"lineNum":"  441","line":"            count++;"},
{"lineNum":"  442","line":"        }"},
{"lineNum":"  443","line":"        memset(nonce32, 0, 32);"},
{"lineNum":"  444","line":"        secp256k1_scalar_clear(&msg);"},
{"lineNum":"  445","line":"        secp256k1_scalar_clear(&non);"},
{"lineNum":"  446","line":"        secp256k1_scalar_clear(&sec);"},
{"lineNum":"  447","line":"    }"},
{"lineNum":"  448","line":"    if (ret) {"},
{"lineNum":"  449","line":"        secp256k1_ecdsa_signature_save(signature, &r, &s);"},
{"lineNum":"  450","line":"    } else {"},
{"lineNum":"  451","line":"        memset(signature, 0, sizeof(*signature));"},
{"lineNum":"  452","line":"    }"},
{"lineNum":"  453","line":"    return ret;"},
{"lineNum":"  454","line":"}"},
{"lineNum":"  455","line":""},
{"lineNum":"  456","line":"int secp256k1_ec_seckey_verify(const secp256k1_context* ctx, const unsigned char *seckey) {","class":"lineCov","hits":"2","order":"5034","possible_hits":"2",},
{"lineNum":"  457","line":"    secp256k1_scalar sec;"},
{"lineNum":"  458","line":"    int ret;"},
{"lineNum":"  459","line":"    int overflow;"},
{"lineNum":"  460","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  461","line":"    ARG_CHECK(seckey != NULL);","class":"lineCov","hits":"1","order":"5035","possible_hits":"1",},
{"lineNum":"  462","line":""},
{"lineNum":"  463","line":"    secp256k1_scalar_set_b32(&sec, seckey, &overflow);","class":"lineCov","hits":"1","order":"5036","possible_hits":"1",},
{"lineNum":"  464","line":"    ret = !overflow && !secp256k1_scalar_is_zero(&sec);","class":"lineCov","hits":"1","order":"5037","possible_hits":"1",},
{"lineNum":"  465","line":"    secp256k1_scalar_clear(&sec);","class":"lineCov","hits":"1","order":"5038","possible_hits":"1",},
{"lineNum":"  466","line":"    return ret;","class":"lineCov","hits":"1","order":"5039","possible_hits":"1",},
{"lineNum":"  467","line":"}","class":"lineCov","hits":"1","order":"5040","possible_hits":"1",},
{"lineNum":"  468","line":""},
{"lineNum":"  469","line":"int secp256k1_ec_pubkey_create(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *seckey) {","class":"lineCov","hits":"2","order":"5052","possible_hits":"2",},
{"lineNum":"  470","line":"    secp256k1_gej pj;"},
{"lineNum":"  471","line":"    secp256k1_ge p;"},
{"lineNum":"  472","line":"    secp256k1_scalar sec;"},
{"lineNum":"  473","line":"    int overflow;"},
{"lineNum":"  474","line":"    int ret = 0;","class":"lineCov","hits":"1","order":"5053","possible_hits":"1",},
{"lineNum":"  475","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  476","line":"    ARG_CHECK(pubkey != NULL);","class":"lineCov","hits":"1","order":"5054","possible_hits":"1",},
{"lineNum":"  477","line":"    memset(pubkey, 0, sizeof(*pubkey));","class":"lineCov","hits":"1","order":"5055","possible_hits":"1",},
{"lineNum":"  478","line":"    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));","class":"lineCov","hits":"1","order":"5056","possible_hits":"1",},
{"lineNum":"  479","line":"    ARG_CHECK(seckey != NULL);","class":"lineCov","hits":"1","order":"5060","possible_hits":"1",},
{"lineNum":"  480","line":""},
{"lineNum":"  481","line":"    secp256k1_scalar_set_b32(&sec, seckey, &overflow);","class":"lineCov","hits":"1","order":"5061","possible_hits":"1",},
{"lineNum":"  482","line":"    ret = (!overflow) & (!secp256k1_scalar_is_zero(&sec));","class":"lineCov","hits":"1","order":"5062","possible_hits":"1",},
{"lineNum":"  483","line":"    if (ret) {","class":"lineCov","hits":"1","order":"5063","possible_hits":"1",},
{"lineNum":"  484","line":"        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &sec);","class":"lineCov","hits":"1","order":"5064","possible_hits":"1",},
{"lineNum":"  485","line":"        secp256k1_ge_set_gej(&p, &pj);","class":"lineCov","hits":"1","order":"5065","possible_hits":"1",},
{"lineNum":"  486","line":"        secp256k1_pubkey_save(pubkey, &p);","class":"lineCov","hits":"1","order":"5077","possible_hits":"1",},
{"lineNum":"  487","line":"    }"},
{"lineNum":"  488","line":"    secp256k1_scalar_clear(&sec);","class":"lineCov","hits":"1","order":"5078","possible_hits":"1",},
{"lineNum":"  489","line":"    return ret;","class":"lineCov","hits":"1","order":"5079","possible_hits":"1",},
{"lineNum":"  490","line":"}","class":"lineCov","hits":"1","order":"5080","possible_hits":"1",},
{"lineNum":"  491","line":""},
{"lineNum":"  492","line":"int secp256k1_ec_privkey_negate(const secp256k1_context* ctx, unsigned char *seckey) {"},
{"lineNum":"  493","line":"    secp256k1_scalar sec;"},
{"lineNum":"  494","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  495","line":"    ARG_CHECK(seckey != NULL);"},
{"lineNum":"  496","line":""},
{"lineNum":"  497","line":"    secp256k1_scalar_set_b32(&sec, seckey, NULL);"},
{"lineNum":"  498","line":"    secp256k1_scalar_negate(&sec, &sec);"},
{"lineNum":"  499","line":"    secp256k1_scalar_get_b32(seckey, &sec);"},
{"lineNum":"  500","line":""},
{"lineNum":"  501","line":"    secp256k1_scalar_clear(&sec);"},
{"lineNum":"  502","line":"    return 1;"},
{"lineNum":"  503","line":"}"},
{"lineNum":"  504","line":""},
{"lineNum":"  505","line":"int secp256k1_ec_pubkey_negate(const secp256k1_context* ctx, secp256k1_pubkey *pubkey) {"},
{"lineNum":"  506","line":"    int ret = 0;"},
{"lineNum":"  507","line":"    secp256k1_ge p;"},
{"lineNum":"  508","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  509","line":"    ARG_CHECK(pubkey != NULL);"},
{"lineNum":"  510","line":""},
{"lineNum":"  511","line":"    ret = secp256k1_pubkey_load(ctx, &p, pubkey);"},
{"lineNum":"  512","line":"    memset(pubkey, 0, sizeof(*pubkey));"},
{"lineNum":"  513","line":"    if (ret) {"},
{"lineNum":"  514","line":"        secp256k1_ge_neg(&p, &p);"},
{"lineNum":"  515","line":"        secp256k1_pubkey_save(pubkey, &p);"},
{"lineNum":"  516","line":"    }"},
{"lineNum":"  517","line":"    return ret;"},
{"lineNum":"  518","line":"}"},
{"lineNum":"  519","line":""},
{"lineNum":"  520","line":"int secp256k1_ec_privkey_tweak_add(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {"},
{"lineNum":"  521","line":"    secp256k1_scalar term;"},
{"lineNum":"  522","line":"    secp256k1_scalar sec;"},
{"lineNum":"  523","line":"    int ret = 0;"},
{"lineNum":"  524","line":"    int overflow = 0;"},
{"lineNum":"  525","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  526","line":"    ARG_CHECK(seckey != NULL);"},
{"lineNum":"  527","line":"    ARG_CHECK(tweak != NULL);"},
{"lineNum":"  528","line":""},
{"lineNum":"  529","line":"    secp256k1_scalar_set_b32(&term, tweak, &overflow);"},
{"lineNum":"  530","line":"    secp256k1_scalar_set_b32(&sec, seckey, NULL);"},
{"lineNum":"  531","line":""},
{"lineNum":"  532","line":"    ret = !overflow && secp256k1_eckey_privkey_tweak_add(&sec, &term);"},
{"lineNum":"  533","line":"    memset(seckey, 0, 32);"},
{"lineNum":"  534","line":"    if (ret) {"},
{"lineNum":"  535","line":"        secp256k1_scalar_get_b32(seckey, &sec);"},
{"lineNum":"  536","line":"    }"},
{"lineNum":"  537","line":""},
{"lineNum":"  538","line":"    secp256k1_scalar_clear(&sec);"},
{"lineNum":"  539","line":"    secp256k1_scalar_clear(&term);"},
{"lineNum":"  540","line":"    return ret;"},
{"lineNum":"  541","line":"}"},
{"lineNum":"  542","line":""},
{"lineNum":"  543","line":"int secp256k1_ec_pubkey_tweak_add(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {"},
{"lineNum":"  544","line":"    secp256k1_ge p;"},
{"lineNum":"  545","line":"    secp256k1_scalar term;"},
{"lineNum":"  546","line":"    int ret = 0;"},
{"lineNum":"  547","line":"    int overflow = 0;"},
{"lineNum":"  548","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  549","line":"    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));"},
{"lineNum":"  550","line":"    ARG_CHECK(pubkey != NULL);"},
{"lineNum":"  551","line":"    ARG_CHECK(tweak != NULL);"},
{"lineNum":"  552","line":""},
{"lineNum":"  553","line":"    secp256k1_scalar_set_b32(&term, tweak, &overflow);"},
{"lineNum":"  554","line":"    ret = !overflow && secp256k1_pubkey_load(ctx, &p, pubkey);"},
{"lineNum":"  555","line":"    memset(pubkey, 0, sizeof(*pubkey));"},
{"lineNum":"  556","line":"    if (ret) {"},
{"lineNum":"  557","line":"        if (secp256k1_eckey_pubkey_tweak_add(&ctx->ecmult_ctx, &p, &term)) {"},
{"lineNum":"  558","line":"            secp256k1_pubkey_save(pubkey, &p);"},
{"lineNum":"  559","line":"        } else {"},
{"lineNum":"  560","line":"            ret = 0;"},
{"lineNum":"  561","line":"        }"},
{"lineNum":"  562","line":"    }"},
{"lineNum":"  563","line":""},
{"lineNum":"  564","line":"    return ret;"},
{"lineNum":"  565","line":"}"},
{"lineNum":"  566","line":""},
{"lineNum":"  567","line":"int secp256k1_ec_privkey_tweak_mul(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {"},
{"lineNum":"  568","line":"    secp256k1_scalar factor;"},
{"lineNum":"  569","line":"    secp256k1_scalar sec;"},
{"lineNum":"  570","line":"    int ret = 0;"},
{"lineNum":"  571","line":"    int overflow = 0;"},
{"lineNum":"  572","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  573","line":"    ARG_CHECK(seckey != NULL);"},
{"lineNum":"  574","line":"    ARG_CHECK(tweak != NULL);"},
{"lineNum":"  575","line":""},
{"lineNum":"  576","line":"    secp256k1_scalar_set_b32(&factor, tweak, &overflow);"},
{"lineNum":"  577","line":"    secp256k1_scalar_set_b32(&sec, seckey, NULL);"},
{"lineNum":"  578","line":"    ret = !overflow && secp256k1_eckey_privkey_tweak_mul(&sec, &factor);"},
{"lineNum":"  579","line":"    memset(seckey, 0, 32);"},
{"lineNum":"  580","line":"    if (ret) {"},
{"lineNum":"  581","line":"        secp256k1_scalar_get_b32(seckey, &sec);"},
{"lineNum":"  582","line":"    }"},
{"lineNum":"  583","line":""},
{"lineNum":"  584","line":"    secp256k1_scalar_clear(&sec);"},
{"lineNum":"  585","line":"    secp256k1_scalar_clear(&factor);"},
{"lineNum":"  586","line":"    return ret;"},
{"lineNum":"  587","line":"}"},
{"lineNum":"  588","line":""},
{"lineNum":"  589","line":"int secp256k1_ec_pubkey_tweak_mul(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {"},
{"lineNum":"  590","line":"    secp256k1_ge p;"},
{"lineNum":"  591","line":"    secp256k1_scalar factor;"},
{"lineNum":"  592","line":"    int ret = 0;"},
{"lineNum":"  593","line":"    int overflow = 0;"},
{"lineNum":"  594","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  595","line":"    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));"},
{"lineNum":"  596","line":"    ARG_CHECK(pubkey != NULL);"},
{"lineNum":"  597","line":"    ARG_CHECK(tweak != NULL);"},
{"lineNum":"  598","line":""},
{"lineNum":"  599","line":"    secp256k1_scalar_set_b32(&factor, tweak, &overflow);"},
{"lineNum":"  600","line":"    ret = !overflow && secp256k1_pubkey_load(ctx, &p, pubkey);"},
{"lineNum":"  601","line":"    memset(pubkey, 0, sizeof(*pubkey));"},
{"lineNum":"  602","line":"    if (ret) {"},
{"lineNum":"  603","line":"        if (secp256k1_eckey_pubkey_tweak_mul(&ctx->ecmult_ctx, &p, &factor)) {"},
{"lineNum":"  604","line":"            secp256k1_pubkey_save(pubkey, &p);"},
{"lineNum":"  605","line":"        } else {"},
{"lineNum":"  606","line":"            ret = 0;"},
{"lineNum":"  607","line":"        }"},
{"lineNum":"  608","line":"    }"},
{"lineNum":"  609","line":""},
{"lineNum":"  610","line":"    return ret;"},
{"lineNum":"  611","line":"}"},
{"lineNum":"  612","line":""},
{"lineNum":"  613","line":"int secp256k1_context_randomize(secp256k1_context* ctx, const unsigned char *seed32) {"},
{"lineNum":"  614","line":"    VERIFY_CHECK(ctx != NULL);"},
{"lineNum":"  615","line":"    if (secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx)) {"},
{"lineNum":"  616","line":"        secp256k1_ecmult_gen_blind(&ctx->ecmult_gen_ctx, seed32);"},
{"lineNum":"  617","line":"    }"},
{"lineNum":"  618","line":"    return 1;"},
{"lineNum":"  619","line":"}"},
{"lineNum":"  620","line":""},
{"lineNum":"  621","line":"int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *pubnonce, const secp256k1_pubkey * const *pubnonces, size_t n) {"},
{"lineNum":"  622","line":"    size_t i;"},
{"lineNum":"  623","line":"    secp256k1_gej Qj;"},
{"lineNum":"  624","line":"    secp256k1_ge Q;"},
{"lineNum":"  625","line":""},
{"lineNum":"  626","line":"    ARG_CHECK(pubnonce != NULL);"},
{"lineNum":"  627","line":"    memset(pubnonce, 0, sizeof(*pubnonce));"},
{"lineNum":"  628","line":"    ARG_CHECK(n >= 1);"},
{"lineNum":"  629","line":"    ARG_CHECK(pubnonces != NULL);"},
{"lineNum":"  630","line":""},
{"lineNum":"  631","line":"    secp256k1_gej_set_infinity(&Qj);"},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"    for (i = 0; i < n; i++) {"},
{"lineNum":"  634","line":"        secp256k1_pubkey_load(ctx, &Q, pubnonces[i]);"},
{"lineNum":"  635","line":"        secp256k1_gej_add_ge(&Qj, &Qj, &Q);"},
{"lineNum":"  636","line":"    }"},
{"lineNum":"  637","line":"    if (secp256k1_gej_is_infinity(&Qj)) {"},
{"lineNum":"  638","line":"        return 0;"},
{"lineNum":"  639","line":"    }"},
{"lineNum":"  640","line":"    secp256k1_ge_set_gej(&Q, &Qj);"},
{"lineNum":"  641","line":"    secp256k1_pubkey_save(pubnonce, &Q);"},
{"lineNum":"  642","line":"    return 1;"},
{"lineNum":"  643","line":"}"},
{"lineNum":"  644","line":""},
{"lineNum":"  645","line":"#ifdef ENABLE_MODULE_ECDH"},
{"lineNum":"  646","line":"# include \"modules/ecdh/main_impl.h\""},
{"lineNum":"  647","line":"#endif"},
{"lineNum":"  648","line":""},
{"lineNum":"  649","line":"#ifdef ENABLE_MODULE_RECOVERY"},
{"lineNum":"  650","line":"# include \"modules/recovery/main_impl.h\""},
{"lineNum":"  651","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "lightning_invoice-99c93907235ac8b4", "date" : "2019-08-31 07:54:49", "instrumented" : 130, "covered" : 123,};
var merged_data = [];
