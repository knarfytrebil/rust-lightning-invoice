var data = {lines:[
{"lineNum":"    1","line":"use std::error;"},
{"lineNum":"    2","line":"use std::fmt;"},
{"lineNum":"    3","line":"use std::fmt::{Display, Formatter};"},
{"lineNum":"    4","line":"use std::num::ParseIntError;"},
{"lineNum":"    5","line":"use std::str;"},
{"lineNum":"    6","line":"use std::str::FromStr;"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"use bech32;"},
{"lineNum":"    9","line":"use bech32::{Bech32, u5, FromBase32};"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"use bitcoin_hashes::Hash;"},
{"lineNum":"   12","line":"use bitcoin_hashes::sha256;"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"use num_traits::{CheckedAdd, CheckedMul};"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"use secp256k1;"},
{"lineNum":"   17","line":"use secp256k1::recovery::{RecoveryId, RecoverableSignature};"},
{"lineNum":"   18","line":"use secp256k1::key::PublicKey;"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"use super::*;"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"use self::hrp_sm::parse_hrp;"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"/// State machine to parse the hrp"},
{"lineNum":"   25","line":"mod hrp_sm {"},
{"lineNum":"   26","line":"\tuse std::ops::Range;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"\t#[derive(PartialEq, Eq, Debug)]","class":"lineCov","hits":"2","order":"3308","possible_hits":"2",},
{"lineNum":"   29","line":"\tenum States {"},
{"lineNum":"   30","line":"\t\tStart,"},
{"lineNum":"   31","line":"\t\tParseL,"},
{"lineNum":"   32","line":"\t\tParseN,"},
{"lineNum":"   33","line":"\t\tParseCurrencyPrefix,"},
{"lineNum":"   34","line":"\t\tParseAmountNumber,"},
{"lineNum":"   35","line":"\t\tParseAmountSiPrefix,"},
{"lineNum":"   36","line":"\t}"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"\timpl States {"},
{"lineNum":"   39","line":"\t\tfn next_state(&self, read_symbol: char) -> Result<States, super::ParseError> {","class":"lineCov","hits":"1","order":"3272","possible_hits":"1",},
{"lineNum":"   40","line":"\t\t\tmatch *self {","class":"linePartCov","hits":"4","order":"3276","possible_hits":"5",},
{"lineNum":"   41","line":"\t\t\t\tStates::Start => {","class":"lineCov","hits":"1","order":"3273","possible_hits":"1",},
{"lineNum":"   42","line":"\t\t\t\t\tif read_symbol == \'l\' {","class":"lineCov","hits":"2","order":"3274","possible_hits":"2",},
{"lineNum":"   43","line":"\t\t\t\t\t\tOk(States::ParseL)","class":"lineCov","hits":"1","order":"3275","possible_hits":"1",},
{"lineNum":"   44","line":"\t\t\t\t\t} else {"},
{"lineNum":"   45","line":"\t\t\t\t\t\tErr(super::ParseError::MalformedHRP)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   46","line":"\t\t\t\t\t}"},
{"lineNum":"   47","line":"\t\t\t\t}"},
{"lineNum":"   48","line":"\t\t\t\tStates::ParseL => {"},
{"lineNum":"   49","line":"\t\t\t\t\tif read_symbol == \'n\' {","class":"lineCov","hits":"2","order":"3283","possible_hits":"2",},
{"lineNum":"   50","line":"\t\t\t\t\t\tOk(States::ParseN)","class":"lineCov","hits":"1","order":"3284","possible_hits":"1",},
{"lineNum":"   51","line":"\t\t\t\t\t} else {"},
{"lineNum":"   52","line":"\t\t\t\t\t\tErr(super::ParseError::MalformedHRP)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   53","line":"\t\t\t\t\t}"},
{"lineNum":"   54","line":"\t\t\t\t},"},
{"lineNum":"   55","line":"\t\t\t\tStates::ParseN => {"},
{"lineNum":"   56","line":"\t\t\t\t\tif !read_symbol.is_numeric() {","class":"lineCov","hits":"2","order":"3285","possible_hits":"2",},
{"lineNum":"   57","line":"\t\t\t\t\t\tOk(States::ParseCurrencyPrefix)","class":"lineCov","hits":"1","order":"3292","possible_hits":"1",},
{"lineNum":"   58","line":"\t\t\t\t\t} else {"},
{"lineNum":"   59","line":"\t\t\t\t\t\tOk(States::ParseAmountNumber)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   60","line":"\t\t\t\t\t}"},
{"lineNum":"   61","line":"\t\t\t\t},"},
{"lineNum":"   62","line":"\t\t\t\tStates::ParseCurrencyPrefix => {"},
{"lineNum":"   63","line":"\t\t\t\t\tif !read_symbol.is_numeric() {","class":"lineCov","hits":"2","order":"3300","possible_hits":"2",},
{"lineNum":"   64","line":"\t\t\t\t\t\tOk(States::ParseCurrencyPrefix)","class":"lineCov","hits":"1","order":"3301","possible_hits":"1",},
{"lineNum":"   65","line":"\t\t\t\t\t} else {"},
{"lineNum":"   66","line":"\t\t\t\t\t\tOk(States::ParseAmountNumber)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   67","line":"\t\t\t\t\t}"},
{"lineNum":"   68","line":"\t\t\t\t},"},
{"lineNum":"   69","line":"\t\t\t\tStates::ParseAmountNumber => {"},
{"lineNum":"   70","line":"\t\t\t\t\tif read_symbol.is_numeric() {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   71","line":"\t\t\t\t\t\tOk(States::ParseAmountNumber)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   72","line":"\t\t\t\t\t} else if [\'m\', \'u\', \'n\', \'p\'].contains(&read_symbol) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   73","line":"\t\t\t\t\t\tOk(States::ParseAmountSiPrefix)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"\t\t\t\t\t} else {"},
{"lineNum":"   75","line":"\t\t\t\t\t\tErr(super::ParseError::MalformedHRP)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"\t\t\t\t\t}"},
{"lineNum":"   77","line":"\t\t\t\t},"},
{"lineNum":"   78","line":"\t\t\t\tStates::ParseAmountSiPrefix => Err(super::ParseError::MalformedHRP),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   79","line":"\t\t\t}"},
{"lineNum":"   80","line":"\t\t}","class":"linePartCov","hits":"1","order":"3277","possible_hits":"3",},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"\t\tfn is_final(&self) -> bool {","class":"lineCov","hits":"1","order":"3306","possible_hits":"1",},
{"lineNum":"   83","line":"\t\t\t!(*self == States::ParseL || *self == States::ParseN)","class":"lineCov","hits":"2","order":"3307","possible_hits":"2",},
{"lineNum":"   84","line":"\t\t}","class":"lineCov","hits":"1","order":"3309","possible_hits":"1",},
{"lineNum":"   85","line":"\t}"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"\tstruct StateMachine {"},
{"lineNum":"   89","line":"\t\tstate: States,"},
{"lineNum":"   90","line":"\t\tposition: usize,"},
{"lineNum":"   91","line":"\t\tcurrency_prefix: Option<Range<usize>>,"},
{"lineNum":"   92","line":"\t\tamount_number: Option<Range<usize>>,"},
{"lineNum":"   93","line":"\t\tamount_si_prefix: Option<Range<usize>>,"},
{"lineNum":"   94","line":"\t}"},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"\timpl StateMachine {"},
{"lineNum":"   97","line":"\t\tfn new() -> StateMachine {","class":"lineCov","hits":"1","order":"3261","possible_hits":"1",},
{"lineNum":"   98","line":"\t\t\tStateMachine {","class":"lineCov","hits":"1","order":"3266","possible_hits":"1",},
{"lineNum":"   99","line":"\t\t\t\tstate: States::Start,","class":"lineCov","hits":"1","order":"3262","possible_hits":"1",},
{"lineNum":"  100","line":"\t\t\t\tposition: 0,"},
{"lineNum":"  101","line":"\t\t\t\tcurrency_prefix: None,","class":"lineCov","hits":"1","order":"3263","possible_hits":"1",},
{"lineNum":"  102","line":"\t\t\t\tamount_number: None,","class":"lineCov","hits":"1","order":"3264","possible_hits":"1",},
{"lineNum":"  103","line":"\t\t\t\tamount_si_prefix: None,","class":"lineCov","hits":"1","order":"3265","possible_hits":"1",},
{"lineNum":"  104","line":"\t\t\t}"},
{"lineNum":"  105","line":"\t\t}","class":"linePartCov","hits":"1","order":"3267","possible_hits":"2",},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"\t\tfn update_range(range: &mut Option<Range<usize>>, position: usize) {","class":"lineCov","hits":"1","order":"3294","possible_hits":"1",},
{"lineNum":"  108","line":"\t\t\tlet new_range = match *range {","class":"lineCov","hits":"1","order":"3296","possible_hits":"1",},
{"lineNum":"  109","line":"\t\t\t\tNone => Range {start: position, end: position + 1},","class":"linePartCov","hits":"2","order":"3295","possible_hits":"4",},
{"lineNum":"  110","line":"\t\t\t\tSome(ref r) => Range {start: r.start, end: r.end + 1},","class":"linePartCov","hits":"1","order":"3302","possible_hits":"2",},
{"lineNum":"  111","line":"\t\t\t};"},
{"lineNum":"  112","line":"\t\t\t*range = Some(new_range);","class":"lineCov","hits":"1","order":"3297","possible_hits":"1",},
{"lineNum":"  113","line":"\t\t}","class":"linePartCov","hits":"1","order":"3298","possible_hits":"2",},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"\t\tfn step(&mut self, c: char) -> Result<(), super::ParseError> {","class":"linePartCov","hits":"1","order":"3270","possible_hits":"2",},
{"lineNum":"  116","line":"\t\t\tlet next_state = self.state.next_state(c)?;","class":"linePartCov","hits":"3","order":"3271","possible_hits":"5",},
{"lineNum":"  117","line":"\t\t\tmatch next_state {","class":"linePartCov","hits":"1","order":"3299","possible_hits":"3",},
{"lineNum":"  118","line":"\t\t\t\tStates::ParseCurrencyPrefix => {","class":"lineCov","hits":"1","order":"3278","possible_hits":"1",},
{"lineNum":"  119","line":"\t\t\t\t\tStateMachine::update_range(&mut self.currency_prefix, self.position)","class":"lineCov","hits":"1","order":"3293","possible_hits":"1",},
{"lineNum":"  120","line":"\t\t\t\t}"},
{"lineNum":"  121","line":"\t\t\t\tStates::ParseAmountNumber => {"},
{"lineNum":"  122","line":"\t\t\t\t\tStateMachine::update_range(&mut self.amount_number, self.position)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  123","line":"\t\t\t\t},"},
{"lineNum":"  124","line":"\t\t\t\tStates::ParseAmountSiPrefix => {"},
{"lineNum":"  125","line":"\t\t\t\t\tStateMachine::update_range(&mut self.amount_si_prefix, self.position)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  126","line":"\t\t\t\t},"},
{"lineNum":"  127","line":"\t\t\t\t_ => {}"},
{"lineNum":"  128","line":"\t\t\t}"},
{"lineNum":"  129","line":""},
{"lineNum":"  130","line":"\t\t\tself.position += 1;","class":"linePartCov","hits":"1","order":"3279","possible_hits":"3",},
{"lineNum":"  131","line":"\t\t\tself.state = next_state;","class":"lineCov","hits":"1","order":"3280","possible_hits":"1",},
{"lineNum":"  132","line":"\t\t\tOk(())","class":"lineCov","hits":"1","order":"3281","possible_hits":"1",},
{"lineNum":"  133","line":"\t\t}","class":"linePartCov","hits":"2","order":"3282","possible_hits":"3",},
{"lineNum":"  134","line":""},
{"lineNum":"  135","line":"\t\tfn is_final(&self) -> bool {","class":"lineCov","hits":"1","order":"3304","possible_hits":"1",},
{"lineNum":"  136","line":"\t\t\tself.state.is_final()","class":"lineCov","hits":"1","order":"3305","possible_hits":"1",},
{"lineNum":"  137","line":"\t\t}","class":"linePartCov","hits":"1","order":"3310","possible_hits":"2",},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"\t\tfn currency_prefix(&self) -> &Option<Range<usize>> {","class":"lineCov","hits":"1","order":"3312","possible_hits":"1",},
{"lineNum":"  140","line":"\t\t\t&self.currency_prefix","class":"lineCov","hits":"1","order":"3314","possible_hits":"1",},
{"lineNum":"  141","line":"\t\t}","class":"linePartCov","hits":"1","order":"3315","possible_hits":"2",},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"\t\tfn amount_number(&self) -> &Option<Range<usize>> {","class":"lineCov","hits":"1","order":"3352","possible_hits":"1",},
{"lineNum":"  144","line":"\t\t\t&self.amount_number","class":"lineCov","hits":"1","order":"3353","possible_hits":"1",},
{"lineNum":"  145","line":"\t\t}","class":"linePartCov","hits":"1","order":"3354","possible_hits":"2",},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"\t\tfn amount_si_prefix(&self) -> &Option<Range<usize>> {","class":"lineCov","hits":"1","order":"3358","possible_hits":"1",},
{"lineNum":"  148","line":"\t\t\t&self.amount_si_prefix","class":"lineCov","hits":"1","order":"3359","possible_hits":"1",},
{"lineNum":"  149","line":"\t\t}","class":"linePartCov","hits":"1","order":"3360","possible_hits":"2",},
{"lineNum":"  150","line":"\t}"},
{"lineNum":"  151","line":""},
{"lineNum":"  152","line":"\tpub fn parse_hrp(input: &str) -> Result<(&str, &str, &str), super::ParseError> {","class":"linePartCov","hits":"1","order":"3259","possible_hits":"2",},
{"lineNum":"  153","line":"\t\tlet mut sm = StateMachine::new();","class":"lineCov","hits":"1","order":"3260","possible_hits":"1",},
{"lineNum":"  154","line":"\t\tfor c in input.chars() {","class":"lineCov","hits":"3","order":"3268","possible_hits":"3",},
{"lineNum":"  155","line":"\t\t\tsm.step(c)?;","class":"linePartCov","hits":"2","order":"3269","possible_hits":"4",},
{"lineNum":"  156","line":"\t\t}"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"\t\tif !sm.is_final() {","class":"lineCov","hits":"2","order":"3303","possible_hits":"2",},
{"lineNum":"  159","line":"\t\t\treturn Err(super::ParseError::MalformedHRP);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  160","line":"\t\t}"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"\t\tlet currency = sm.currency_prefix().clone()","class":"lineCov","hits":"2","order":"3311","possible_hits":"2",},
{"lineNum":"  163","line":"\t\t\t.map(|r| &input[r]).unwrap_or(\"\");","class":"lineCov","hits":"3","order":"3328","possible_hits":"3",},
{"lineNum":"  164","line":"\t\tlet amount = sm.amount_number().clone()","class":"lineCov","hits":"2","order":"3351","possible_hits":"2",},
{"lineNum":"  165","line":"\t\t\t.map(|r| &input[r]).unwrap_or(\"\");","class":"linePartCov","hits":"1","order":"3355","possible_hits":"3",},
{"lineNum":"  166","line":"\t\tlet si = sm.amount_si_prefix().clone()","class":"lineCov","hits":"2","order":"3357","possible_hits":"2",},
{"lineNum":"  167","line":"\t\t\t.map(|r| &input[r]).unwrap_or(\"\");","class":"linePartCov","hits":"1","order":"3361","possible_hits":"3",},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"\t\tOk((currency, amount, si))","class":"lineCov","hits":"1","order":"3362","possible_hits":"1",},
{"lineNum":"  170","line":"\t}","class":"linePartCov","hits":"2","order":"3363","possible_hits":"3",},
{"lineNum":"  171","line":"}"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"impl FromStr for super::Currency {"},
{"lineNum":"  175","line":"\ttype Err = ParseError;"},
{"lineNum":"  176","line":""},
{"lineNum":"  177","line":"\tfn from_str(currency_prefix: &str) -> Result<Self, ParseError> {","class":"lineCov","hits":"1","order":"1423","possible_hits":"1",},
{"lineNum":"  178","line":"\t\tmatch currency_prefix {","class":"lineCov","hits":"4","order":"1468","possible_hits":"4",},
{"lineNum":"  179","line":"\t\t\t\"bc\" => Ok(Currency::Bitcoin),","class":"lineCov","hits":"2","order":"1425","possible_hits":"2",},
{"lineNum":"  180","line":"\t\t\t\"tb\" => Ok(Currency::BitcoinTestnet),","class":"lineCov","hits":"3","order":"1486","possible_hits":"3",},
{"lineNum":"  181","line":"\t\t\t\"bcrt\" => Ok(Currency::Regtest),","class":"lineCov","hits":"3","order":"1495","possible_hits":"3",},
{"lineNum":"  182","line":"\t\t\t_ => Err(ParseError::UnknownCurrency)","class":"lineCov","hits":"1","order":"1504","possible_hits":"1",},
{"lineNum":"  183","line":"\t\t}"},
{"lineNum":"  184","line":"\t}","class":"linePartCov","hits":"1","order":"1470","possible_hits":"2",},
{"lineNum":"  185","line":"}"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"impl FromStr for SiPrefix {"},
{"lineNum":"  188","line":"\ttype Err = ParseError;"},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"\tfn from_str(currency_prefix: &str) -> Result<Self, ParseError> {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  191","line":"\t\tuse SiPrefix::*;"},
{"lineNum":"  192","line":"\t\tmatch currency_prefix {","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  193","line":"\t\t\t\"m\" => Ok(Milli),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  194","line":"\t\t\t\"u\" => Ok(Micro),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  195","line":"\t\t\t\"n\" => Ok(Nano),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  196","line":"\t\t\t\"p\" => Ok(Pico),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  197","line":"\t\t\t_ => Err(ParseError::UnknownSiPrefix)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  198","line":"\t\t}"},
{"lineNum":"  199","line":"\t}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  200","line":"}"},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"/// ```"},
{"lineNum":"  203","line":"/// use lightning_invoice::Invoice;"},
{"lineNum":"  204","line":"///"},
{"lineNum":"  205","line":"/// let invoice = \"lnbc1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdp\\"},
{"lineNum":"  206","line":"/// \tl2pkx2ctnv5sxxmmwwd5kgetjypeh2ursdae8g6twvus8g6rfwvs8qun0dfjkxaq8rkx3yf5tcsyz3d7\\"},
{"lineNum":"  207","line":"/// \t3gafnh3cax9rn449d9p5uxz9ezhhypd0elx87sjle52x86fux2ypatgddc6k63n7erqz25le42c4u4ec\\"},
{"lineNum":"  208","line":"/// \tky03ylcqca784w\";"},
{"lineNum":"  209","line":"///"},
{"lineNum":"  210","line":"/// assert!(invoice.parse::<Invoice>().is_ok());"},
{"lineNum":"  211","line":"/// ```"},
{"lineNum":"  212","line":"impl FromStr for Invoice {"},
{"lineNum":"  213","line":"\ttype Err = ParseOrSemanticError;"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"\tfn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {"},
{"lineNum":"  216","line":"\t\tlet signed = s.parse::<SignedRawInvoice>()?;"},
{"lineNum":"  217","line":"\t\tOk(Invoice::from_signed(signed)?)"},
{"lineNum":"  218","line":"\t}"},
{"lineNum":"  219","line":"}"},
{"lineNum":"  220","line":""},
{"lineNum":"  221","line":"/// ```"},
{"lineNum":"  222","line":"/// use lightning_invoice::*;"},
{"lineNum":"  223","line":"///"},
{"lineNum":"  224","line":"/// let invoice = \"lnbc1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdp\\"},
{"lineNum":"  225","line":"/// \tl2pkx2ctnv5sxxmmwwd5kgetjypeh2ursdae8g6twvus8g6rfwvs8qun0dfjkxaq8rkx3yf5tcsyz3d7\\"},
{"lineNum":"  226","line":"/// \t3gafnh3cax9rn449d9p5uxz9ezhhypd0elx87sjle52x86fux2ypatgddc6k63n7erqz25le42c4u4ec\\"},
{"lineNum":"  227","line":"/// \tky03ylcqca784w\";"},
{"lineNum":"  228","line":"///"},
{"lineNum":"  229","line":"/// let parsed_1 = invoice.parse::<Invoice>();"},
{"lineNum":"  230","line":"///"},
{"lineNum":"  231","line":"/// let parsed_2 = match invoice.parse::<SignedRawInvoice>() {"},
{"lineNum":"  232","line":"/// \tOk(signed) => match Invoice::from_signed(signed) {"},
{"lineNum":"  233","line":"/// \t\tOk(invoice) => Ok(invoice),"},
{"lineNum":"  234","line":"/// \t\tErr(e) => Err(ParseOrSemanticError::SemanticError(e)),"},
{"lineNum":"  235","line":"/// \t},"},
{"lineNum":"  236","line":"/// \tErr(e) => Err(ParseOrSemanticError::ParseError(e)),"},
{"lineNum":"  237","line":"/// };"},
{"lineNum":"  238","line":"///"},
{"lineNum":"  239","line":"/// assert!(parsed_1.is_ok());"},
{"lineNum":"  240","line":"/// assert_eq!(parsed_1, parsed_2);"},
{"lineNum":"  241","line":"/// ```"},
{"lineNum":"  242","line":"impl FromStr for SignedRawInvoice {"},
{"lineNum":"  243","line":"\ttype Err = ParseError;"},
{"lineNum":"  244","line":""},
{"lineNum":"  245","line":"\tfn from_str(s: &str) -> Result<Self, Self::Err> {","class":"linePartCov","hits":"1","order":"2879","possible_hits":"2",},
{"lineNum":"  246","line":"\t\tlet (hrp, data) = Bech32::from_str(s)?.into_parts();","class":"linePartCov","hits":"2","order":"2880","possible_hits":"6",},
{"lineNum":"  247","line":""},
{"lineNum":"  248","line":"\t\tif data.len() < 104 {","class":"lineCov","hits":"2","order":"3252","possible_hits":"2",},
{"lineNum":"  249","line":"\t\t\treturn Err(ParseError::TooShortDataPart);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  250","line":"\t\t}"},
{"lineNum":"  251","line":""},
{"lineNum":"  252","line":"\t\tlet raw_hrp: RawHrp = hrp.parse()?;","class":"linePartCov","hits":"1","order":"3253","possible_hits":"2",},
{"lineNum":"  253","line":"\t\tlet data_part = RawDataPart::from_base32(&data[..data.len()-104])?;","class":"linePartCov","hits":"2","order":"3387","possible_hits":"6",},
{"lineNum":"  254","line":""},
{"lineNum":"  255","line":"\t\tOk(SignedRawInvoice {","class":"lineCov","hits":"1","order":"3807","possible_hits":"1",},
{"lineNum":"  256","line":"\t\t\traw_invoice: RawInvoice {","class":"lineCov","hits":"1","order":"3439","possible_hits":"1",},
{"lineNum":"  257","line":"\t\t\t\thrp: raw_hrp,","class":"lineCov","hits":"1","order":"3437","possible_hits":"1",},
{"lineNum":"  258","line":"\t\t\t\tdata: data_part,","class":"lineCov","hits":"1","order":"3438","possible_hits":"1",},
{"lineNum":"  259","line":"\t\t\t},"},
{"lineNum":"  260","line":"\t\t\thash: RawInvoice::hash_from_parts(","class":"lineCov","hits":"1","order":"3445","possible_hits":"1",},
{"lineNum":"  261","line":"\t\t\t\thrp.as_bytes(),","class":"lineCov","hits":"2","order":"3440","possible_hits":"2",},
{"lineNum":"  262","line":"\t\t\t\t&data[..data.len()-104]","class":"linePartCov","hits":"1","order":"3444","possible_hits":"2",},
{"lineNum":"  263","line":"\t\t\t),"},
{"lineNum":"  264","line":"\t\t\tsignature: Signature::from_base32(&data[data.len()-104..])?,","class":"linePartCov","hits":"1","order":"3717","possible_hits":"4",},
{"lineNum":"  265","line":"\t\t})","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  266","line":"\t}","class":"linePartCov","hits":"2","order":"3808","possible_hits":"10",},
{"lineNum":"  267","line":"}"},
{"lineNum":"  268","line":""},
{"lineNum":"  269","line":"impl FromStr for RawHrp {"},
{"lineNum":"  270","line":"\ttype Err = ParseError;"},
{"lineNum":"  271","line":""},
{"lineNum":"  272","line":"\tfn from_str(hrp: &str) -> Result<Self, <Self as FromStr>::Err> {","class":"linePartCov","hits":"1","order":"3257","possible_hits":"2",},
{"lineNum":"  273","line":"\t\tlet parts = parse_hrp(hrp)?;","class":"linePartCov","hits":"2","order":"3258","possible_hits":"5",},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"\t\tlet currency = parts.0.parse::<Currency>()?;","class":"linePartCov","hits":"1","order":"3367","possible_hits":"2",},
{"lineNum":"  276","line":""},
{"lineNum":"  277","line":"\t\tlet amount = if !parts.1.is_empty() {","class":"linePartCov","hits":"2","order":"3372","possible_hits":"3",},
{"lineNum":"  278","line":"\t\t\tSome(parts.1.parse::<u64>()?)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  279","line":"\t\t} else {"},
{"lineNum":"  280","line":"\t\t\tNone","class":"lineCov","hits":"1","order":"3379","possible_hits":"1",},
{"lineNum":"  281","line":"\t\t};"},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"\t\tlet si_prefix: Option<SiPrefix> = if parts.2.is_empty() {","class":"lineCov","hits":"2","order":"3380","possible_hits":"2",},
{"lineNum":"  284","line":"\t\t\tNone","class":"lineCov","hits":"1","order":"3381","possible_hits":"1",},
{"lineNum":"  285","line":"\t\t} else {"},
{"lineNum":"  286","line":"\t\t\tlet si: SiPrefix = parts.2.parse()?;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  287","line":"\t\t\tif let Some(amt) = amount {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  288","line":"\t\t\t\tif amt.checked_mul(si.multiplier()).is_none() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  289","line":"\t\t\t\t\treturn Err(ParseError::IntegerOverflowError);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  290","line":"\t\t\t\t}"},
{"lineNum":"  291","line":"\t\t\t}"},
{"lineNum":"  292","line":"\t\t\tSome(si)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  293","line":"\t\t};"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"\t\tOk(RawHrp {","class":"lineCov","hits":"1","order":"3385","possible_hits":"1",},
{"lineNum":"  296","line":"\t\t\tcurrency: currency,","class":"lineCov","hits":"1","order":"3382","possible_hits":"1",},
{"lineNum":"  297","line":"\t\t\traw_amount: amount,","class":"lineCov","hits":"1","order":"3383","possible_hits":"1",},
{"lineNum":"  298","line":"\t\t\tsi_prefix: si_prefix,","class":"lineCov","hits":"1","order":"3384","possible_hits":"1",},
{"lineNum":"  299","line":"\t\t})"},
{"lineNum":"  300","line":"\t}","class":"linePartCov","hits":"2","order":"3386","possible_hits":"3",},
{"lineNum":"  301","line":"}"},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"impl FromBase32 for RawDataPart {"},
{"lineNum":"  304","line":"\ttype Err = ParseError;"},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"\tfn from_base32(data: &[u5]) -> Result<Self, Self::Err> {","class":"linePartCov","hits":"1","order":"3394","possible_hits":"2",},
{"lineNum":"  307","line":"\t\tif data.len() < 7 { // timestamp length","class":"lineCov","hits":"2","order":"3395","possible_hits":"2",},
{"lineNum":"  308","line":"\t\t\treturn Err(ParseError::TooShortDataPart);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  309","line":"\t\t}"},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":"\t\tlet timestamp = PositiveTimestamp::from_base32(&data[0..7])?;","class":"linePartCov","hits":"1","order":"3396","possible_hits":"3",},
{"lineNum":"  312","line":"\t\tlet tagged = parse_tagged_parts(&data[7..])?;","class":"linePartCov","hits":"1","order":"3407","possible_hits":"3",},
{"lineNum":"  313","line":""},
{"lineNum":"  314","line":"\t\tOk(RawDataPart {","class":"lineCov","hits":"1","order":"3435","possible_hits":"1",},
{"lineNum":"  315","line":"\t\t\ttimestamp: timestamp,","class":"lineCov","hits":"1","order":"3433","possible_hits":"1",},
{"lineNum":"  316","line":"\t\t\ttagged_fields: tagged,","class":"lineCov","hits":"1","order":"3434","possible_hits":"1",},
{"lineNum":"  317","line":"\t\t})"},
{"lineNum":"  318","line":"\t}","class":"linePartCov","hits":"2","order":"3436","possible_hits":"3",},
{"lineNum":"  319","line":"}"},
{"lineNum":"  320","line":""},
{"lineNum":"  321","line":"impl FromBase32 for PositiveTimestamp {"},
{"lineNum":"  322","line":"\ttype Err = ParseError;"},
{"lineNum":"  323","line":""},
{"lineNum":"  324","line":"\tfn from_base32(b32: &[u5]) -> Result<Self, Self::Err> {","class":"lineCov","hits":"1","order":"3397","possible_hits":"1",},
{"lineNum":"  325","line":"\t\tif b32.len() != 7 {","class":"lineCov","hits":"1","order":"3398","possible_hits":"1",},
{"lineNum":"  326","line":"\t\t\treturn Err(ParseError::InvalidSliceLength(\"PositiveTimestamp::from_base32()\".into()));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  327","line":"\t\t}"},
{"lineNum":"  328","line":"\t\tlet timestamp: u64 = parse_int_be(b32, 32)","class":"lineCov","hits":"1","order":"3399","possible_hits":"1",},
{"lineNum":"  329","line":"\t\t\t.expect(\"7*5bit < 64bit, no overflow possible\");"},
{"lineNum":"  330","line":"\t\tmatch PositiveTimestamp::from_unix_timestamp(timestamp) {","class":"linePartCov","hits":"1","order":"3400","possible_hits":"2",},
{"lineNum":"  331","line":"\t\t\tOk(t) => Ok(t),","class":"lineCov","hits":"2","order":"3405","possible_hits":"2",},
{"lineNum":"  332","line":"\t\t\tErr(CreationError::TimestampOutOfBounds) => Err(ParseError::TimestampOverflow),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  333","line":"\t\t\tErr(_) => unreachable!(),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  334","line":"\t\t}"},
{"lineNum":"  335","line":"\t}","class":"linePartCov","hits":"2","order":"3406","possible_hits":"4",},
{"lineNum":"  336","line":"}"},
{"lineNum":"  337","line":""},
{"lineNum":"  338","line":"impl FromBase32 for Signature {"},
{"lineNum":"  339","line":"\ttype Err = ParseError;"},
{"lineNum":"  340","line":"\tfn from_base32(signature: &[u5]) -> Result<Self, Self::Err> {","class":"linePartCov","hits":"1","order":"3718","possible_hits":"2",},
{"lineNum":"  341","line":"\t\tif signature.len() != 104 {","class":"lineCov","hits":"2","order":"3719","possible_hits":"2",},
{"lineNum":"  342","line":"\t\t\treturn Err(ParseError::InvalidSliceLength(\"Signature::from_base32()\".into()));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  343","line":"\t\t}"},
{"lineNum":"  344","line":"\t\tlet recoverable_signature_bytes = Vec::<u8>::from_base32(signature)?;","class":"linePartCov","hits":"1","order":"3720","possible_hits":"3",},
{"lineNum":"  345","line":"\t\tlet signature = &recoverable_signature_bytes[0..64];","class":"lineCov","hits":"2","order":"3721","possible_hits":"2",},
{"lineNum":"  346","line":"\t\tlet recovery_id = RecoveryId::from_i32(recoverable_signature_bytes[64] as i32)?;","class":"linePartCov","hits":"1","order":"3722","possible_hits":"2",},
{"lineNum":"  347","line":""},
{"lineNum":"  348","line":"\t\tOk(Signature(RecoverableSignature::from_compact(","class":"lineCov","hits":"2","order":"3729","possible_hits":"2",},
{"lineNum":"  349","line":"\t\t\tsignature,","class":"lineCov","hits":"1","order":"3727","possible_hits":"1",},
{"lineNum":"  350","line":"\t\t\trecovery_id","class":"lineCov","hits":"1","order":"3728","possible_hits":"1",},
{"lineNum":"  351","line":"\t\t)?))","class":"linePartCov","hits":"1","order":"3803","possible_hits":"2",},
{"lineNum":"  352","line":"\t}","class":"linePartCov","hits":"2","order":"3806","possible_hits":"6",},
{"lineNum":"  353","line":"}"},
{"lineNum":"  354","line":""},
{"lineNum":"  355","line":"fn parse_int_be<T, U>(digits: &[U], base: T) -> Option<T>","class":"linePartCov","hits":"4","order":"2231","possible_hits":"8",},
{"lineNum":"  356","line":"\twhere T: CheckedAdd + CheckedMul + From<u8> + Default,"},
{"lineNum":"  357","line":"\t      U: Into<u8> + Copy"},
{"lineNum":"  358","line":"{"},
{"lineNum":"  359","line":"\tdigits.iter().fold(Some(Default::default()), |acc, b|","class":"lineCov","hits":"16","order":"2232","possible_hits":"16",},
{"lineNum":"  360","line":"\t\tacc","class":"lineCov","hits":"12","order":"2237","possible_hits":"12",},
{"lineNum":"  361","line":"\t\t\t.and_then(|x| x.checked_mul(&base))","class":"lineCov","hits":"12","order":"2239","possible_hits":"12",},
{"lineNum":"  362","line":"\t\t\t.and_then(|x| x.checked_add(&(Into::<u8>::into(*b)).into()))","class":"linePartCov","hits":"16","order":"2257","possible_hits":"20",},
{"lineNum":"  363","line":"\t)"},
{"lineNum":"  364","line":"}","class":"linePartCov","hits":"4","order":"2271","possible_hits":"8",},
{"lineNum":"  365","line":""},
{"lineNum":"  366","line":"fn parse_tagged_parts(data: &[u5]) -> Result<Vec<RawTaggedField>, ParseError> {","class":"linePartCov","hits":"1","order":"3408","possible_hits":"2",},
{"lineNum":"  367","line":"\tlet mut parts = Vec::<RawTaggedField>::new();","class":"lineCov","hits":"1","order":"3409","possible_hits":"1",},
{"lineNum":"  368","line":"\tlet mut data = data;","class":"lineCov","hits":"1","order":"3410","possible_hits":"1",},
{"lineNum":"  369","line":""},
{"lineNum":"  370","line":"\twhile !data.is_empty() {","class":"lineCov","hits":"3","order":"3411","possible_hits":"3",},
{"lineNum":"  371","line":"\t\tif data.len() < 3 {","class":"lineCov","hits":"1","order":"3412","possible_hits":"1",},
{"lineNum":"  372","line":"\t\t\treturn Err(ParseError::UnexpectedEndOfTaggedFields);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  373","line":"\t\t}"},
{"lineNum":"  374","line":""},
{"lineNum":"  375","line":"\t\t// Ignore tag at data[0], it will be handled in the TaggedField parsers and"},
{"lineNum":"  376","line":"\t\t// parse the length to find the end of the tagged field\'s data"},
{"lineNum":"  377","line":"\t\tlet len = parse_int_be(&data[1..3], 32).expect(\"can\'t overflow\");","class":"lineCov","hits":"1","order":"3413","possible_hits":"1",},
{"lineNum":"  378","line":"\t\tlet last_element = 3 + len;","class":"linePartCov","hits":"1","order":"3414","possible_hits":"2",},
{"lineNum":"  379","line":""},
{"lineNum":"  380","line":"\t\tif data.len() < last_element {","class":"lineCov","hits":"1","order":"3415","possible_hits":"1",},
{"lineNum":"  381","line":"\t\t\treturn Err(ParseError::UnexpectedEndOfTaggedFields);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  382","line":"\t\t}"},
{"lineNum":"  383","line":""},
{"lineNum":"  384","line":"\t\t// Get the tagged field\'s data slice"},
{"lineNum":"  385","line":"\t\tlet field = &data[0..last_element];","class":"lineCov","hits":"1","order":"3416","possible_hits":"1",},
{"lineNum":"  386","line":""},
{"lineNum":"  387","line":"\t\t// Set data slice to remaining data"},
{"lineNum":"  388","line":"\t\tdata = &data[last_element..];","class":"lineCov","hits":"1","order":"3417","possible_hits":"1",},
{"lineNum":"  389","line":""},
{"lineNum":"  390","line":"\t\tmatch TaggedField::from_base32(field) {","class":"linePartCov","hits":"2","order":"3418","possible_hits":"3",},
{"lineNum":"  391","line":"\t\t\tOk(field) => {","class":"lineCov","hits":"2","order":"3427","possible_hits":"2",},
{"lineNum":"  392","line":"\t\t\t\tparts.push(RawTaggedField::KnownSemantics(field))","class":"lineCov","hits":"1","order":"3428","possible_hits":"1",},
{"lineNum":"  393","line":"\t\t\t},"},
{"lineNum":"  394","line":"\t\t\tErr(ParseError::Skip) => {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  395","line":"\t\t\t\tparts.push(RawTaggedField::UnknownSemantics(field.into()))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  396","line":"\t\t\t},"},
{"lineNum":"  397","line":"\t\t\tErr(e) => {return Err(e)}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  398","line":"\t\t}"},
{"lineNum":"  399","line":"\t}","class":"linePartCov","hits":"2","order":"3429","possible_hits":"4",},
{"lineNum":"  400","line":"\tOk(parts)","class":"lineCov","hits":"1","order":"3431","possible_hits":"1",},
{"lineNum":"  401","line":"}","class":"linePartCov","hits":"2","order":"3432","possible_hits":"4",},
{"lineNum":"  402","line":""},
{"lineNum":"  403","line":"impl FromBase32 for TaggedField {"},
{"lineNum":"  404","line":"\ttype Err = ParseError;"},
{"lineNum":"  405","line":""},
{"lineNum":"  406","line":"\tfn from_base32(field: &[u5]) -> Result<TaggedField, ParseError> {","class":"linePartCov","hits":"1","order":"3419","possible_hits":"2",},
{"lineNum":"  407","line":"\t\tif field.len() < 3 {","class":"lineCov","hits":"2","order":"3420","possible_hits":"2",},
{"lineNum":"  408","line":"\t\t\treturn Err(ParseError::UnexpectedEndOfTaggedFields);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  409","line":"\t\t}"},
{"lineNum":"  410","line":""},
{"lineNum":"  411","line":"\t\tlet tag = field[0];","class":"linePartCov","hits":"1","order":"3421","possible_hits":"2",},
{"lineNum":"  412","line":"\t\tlet field_data =  &field[3..];","class":"lineCov","hits":"1","order":"3422","possible_hits":"1",},
{"lineNum":"  413","line":""},
{"lineNum":"  414","line":"\t\tmatch tag.to_u8() {","class":"linePartCov","hits":"3","order":"3423","possible_hits":"9",},
{"lineNum":"  415","line":"\t\t\tconstants::TAG_PAYMENT_HASH =>","class":"lineCov","hits":"1","order":"3424","possible_hits":"1",},
{"lineNum":"  416","line":"\t\t\t\tOk(TaggedField::PaymentHash(Sha256::from_base32(field_data)?)),","class":"linePartCov","hits":"1","order":"3425","possible_hits":"3",},
{"lineNum":"  417","line":"\t\t\tconstants::TAG_DESCRIPTION =>"},
{"lineNum":"  418","line":"\t\t\t\tOk(TaggedField::Description(Description::from_base32(field_data)?)),","class":"linePartCov","hits":"1","order":"3430","possible_hits":"3",},
{"lineNum":"  419","line":"\t\t\tconstants::TAG_PAYEE_PUB_KEY =>"},
{"lineNum":"  420","line":"\t\t\t\tOk(TaggedField::PayeePubKey(PayeePubKey::from_base32(field_data)?)),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  421","line":"\t\t\tconstants::TAG_DESCRIPTION_HASH =>"},
{"lineNum":"  422","line":"\t\t\t\tOk(TaggedField::DescriptionHash(Sha256::from_base32(field_data)?)),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  423","line":"\t\t\tconstants::TAG_EXPIRY_TIME =>"},
{"lineNum":"  424","line":"\t\t\t\tOk(TaggedField::ExpiryTime(ExpiryTime::from_base32(field_data)?)),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  425","line":"\t\t\tconstants::TAG_MIN_FINAL_CLTV_EXPIRY =>"},
{"lineNum":"  426","line":"\t\t\t\tOk(TaggedField::MinFinalCltvExpiry(MinFinalCltvExpiry::from_base32(field_data)?)),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  427","line":"\t\t\tconstants::TAG_FALLBACK =>"},
{"lineNum":"  428","line":"\t\t\t\tOk(TaggedField::Fallback(Fallback::from_base32(field_data)?)),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  429","line":"\t\t\tconstants::TAG_ROUTE =>"},
{"lineNum":"  430","line":"\t\t\t\tOk(TaggedField::Route(Route::from_base32(field_data)?)),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  431","line":"\t\t\t_ => {"},
{"lineNum":"  432","line":"\t\t\t\t// \"A reader MUST skip over unknown fields\""},
{"lineNum":"  433","line":"\t\t\t\tErr(ParseError::Skip)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  434","line":"\t\t\t}"},
{"lineNum":"  435","line":"\t\t}"},
{"lineNum":"  436","line":"\t}","class":"linePartCov","hits":"2","order":"3426","possible_hits":"3",},
{"lineNum":"  437","line":"}"},
{"lineNum":"  438","line":""},
{"lineNum":"  439","line":"impl FromBase32 for Sha256 {"},
{"lineNum":"  440","line":"\ttype Err = ParseError;"},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"\tfn from_base32(field_data: &[u5]) -> Result<Sha256, ParseError> {","class":"linePartCov","hits":"1","order":"2858","possible_hits":"2",},
{"lineNum":"  443","line":"\t\tif field_data.len() != 52 {","class":"lineCov","hits":"4","order":"2859","possible_hits":"4",},
{"lineNum":"  444","line":"\t\t\t// \"A reader MUST skip over […] a p, [or] h […] field that does not have data_length 52 […].\""},
{"lineNum":"  445","line":"\t\t\tErr(ParseError::Skip)","class":"lineCov","hits":"1","order":"2875","possible_hits":"1",},
{"lineNum":"  446","line":"\t\t} else {"},
{"lineNum":"  447","line":"\t\t\tOk(Sha256(sha256::Hash::from_slice(&Vec::<u8>::from_base32(field_data)?)","class":"linePartCov","hits":"2","order":"2860","possible_hits":"4",},
{"lineNum":"  448","line":"\t\t\t\t.expect(\"length was checked before (52 u5 -> 32 u8)\")))"},
{"lineNum":"  449","line":"\t\t}","class":"linePartCov","hits":"1","order":"2867","possible_hits":"7",},
{"lineNum":"  450","line":"\t}","class":"linePartCov","hits":"2","order":"2868","possible_hits":"3",},
{"lineNum":"  451","line":"}"},
{"lineNum":"  452","line":""},
{"lineNum":"  453","line":"impl FromBase32 for Description {"},
{"lineNum":"  454","line":"\ttype Err = ParseError;"},
{"lineNum":"  455","line":""},
{"lineNum":"  456","line":"\tfn from_base32(field_data: &[u5]) -> Result<Description, ParseError> {","class":"linePartCov","hits":"1","order":"1860","possible_hits":"2",},
{"lineNum":"  457","line":"\t\tlet bytes = Vec::<u8>::from_base32(field_data)?;","class":"linePartCov","hits":"2","order":"1861","possible_hits":"5",},
{"lineNum":"  458","line":"\t\tlet description = String::from(str::from_utf8(&bytes)?);","class":"linePartCov","hits":"2","order":"1907","possible_hits":"3",},
{"lineNum":"  459","line":"\t\tOk(Description::new(description).expect(","class":"lineCov","hits":"1","order":"1911","possible_hits":"1",},
{"lineNum":"  460","line":"\t\t\t\"Max len is 639=floor(1023*5/8) since the len field is only 10bits long\""},
{"lineNum":"  461","line":"\t\t))"},
{"lineNum":"  462","line":"\t}","class":"linePartCov","hits":"2","order":"1914","possible_hits":"5",},
{"lineNum":"  463","line":"}"},
{"lineNum":"  464","line":""},
{"lineNum":"  465","line":"impl FromBase32 for PayeePubKey {"},
{"lineNum":"  466","line":"\ttype Err = ParseError;"},
{"lineNum":"  467","line":""},
{"lineNum":"  468","line":"\tfn from_base32(field_data: &[u5]) -> Result<PayeePubKey, ParseError> {","class":"linePartCov","hits":"1","order":"2666","possible_hits":"2",},
{"lineNum":"  469","line":"\t\tif field_data.len() != 53 {","class":"lineCov","hits":"4","order":"2667","possible_hits":"4",},
{"lineNum":"  470","line":"\t\t\t// \"A reader MUST skip over […] a n […] field that does not have data_length 53 […].\""},
{"lineNum":"  471","line":"\t\t\tErr(ParseError::Skip)","class":"lineCov","hits":"1","order":"2689","possible_hits":"1",},
{"lineNum":"  472","line":"\t\t} else {"},
{"lineNum":"  473","line":"\t\t\tlet data_bytes = Vec::<u8>::from_base32(field_data)?;","class":"linePartCov","hits":"1","order":"2668","possible_hits":"4",},
{"lineNum":"  474","line":"\t\t\tlet pub_key = PublicKey::from_slice(&data_bytes)?;","class":"linePartCov","hits":"2","order":"2669","possible_hits":"3",},
{"lineNum":"  475","line":"\t\t\tOk(pub_key.into())","class":"lineCov","hits":"1","order":"2670","possible_hits":"1",},
{"lineNum":"  476","line":"\t\t}","class":"linePartCov","hits":"1","order":"2674","possible_hits":"3",},
{"lineNum":"  477","line":"\t}","class":"linePartCov","hits":"2","order":"2675","possible_hits":"3",},
{"lineNum":"  478","line":"}"},
{"lineNum":"  479","line":""},
{"lineNum":"  480","line":"impl FromBase32 for ExpiryTime {"},
{"lineNum":"  481","line":"\ttype Err = ParseError;"},
{"lineNum":"  482","line":""},
{"lineNum":"  483","line":"\tfn from_base32(field_data: &[u5]) -> Result<ExpiryTime, ParseError> {","class":"lineCov","hits":"1","order":"2229","possible_hits":"1",},
{"lineNum":"  484","line":"\t\tmatch parse_int_be::<u64, u5>(field_data, 32)","class":"lineCov","hits":"2","order":"2230","possible_hits":"2",},
{"lineNum":"  485","line":"\t\t\t.and_then(|t| ExpiryTime::from_seconds(t).ok()) // ok, since the only error is out of bounds","class":"lineCov","hits":"2","order":"2274","possible_hits":"2",},
{"lineNum":"  486","line":"\t\t{"},
{"lineNum":"  487","line":"\t\t\tSome(t) => Ok(t),","class":"lineCov","hits":"2","order":"2286","possible_hits":"2",},
{"lineNum":"  488","line":"\t\t\tNone => Err(ParseError::IntegerOverflowError),","class":"lineCov","hits":"1","order":"2307","possible_hits":"1",},
{"lineNum":"  489","line":"\t\t}"},
{"lineNum":"  490","line":"\t}","class":"linePartCov","hits":"1","order":"2289","possible_hits":"3",},
{"lineNum":"  491","line":"}"},
{"lineNum":"  492","line":""},
{"lineNum":"  493","line":"impl FromBase32 for MinFinalCltvExpiry {"},
{"lineNum":"  494","line":"\ttype Err = ParseError;"},
{"lineNum":"  495","line":""},
{"lineNum":"  496","line":"\tfn from_base32(field_data: &[u5]) -> Result<MinFinalCltvExpiry, ParseError> {","class":"lineCov","hits":"1","order":"2326","possible_hits":"1",},
{"lineNum":"  497","line":"\t\tlet expiry = parse_int_be::<u64, u5>(field_data, 32);","class":"lineCov","hits":"1","order":"2327","possible_hits":"1",},
{"lineNum":"  498","line":"\t\tif let Some(expiry) = expiry {","class":"lineCov","hits":"2","order":"2328","possible_hits":"2",},
{"lineNum":"  499","line":"\t\t\tOk(MinFinalCltvExpiry(expiry))","class":"lineCov","hits":"1","order":"2329","possible_hits":"1",},
{"lineNum":"  500","line":"\t\t} else {"},
{"lineNum":"  501","line":"\t\t\tErr(ParseError::IntegerOverflowError)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  502","line":"\t\t}"},
{"lineNum":"  503","line":"\t}","class":"linePartCov","hits":"1","order":"2330","possible_hits":"2",},
{"lineNum":"  504","line":"}"},
{"lineNum":"  505","line":""},
{"lineNum":"  506","line":"impl FromBase32 for Fallback {"},
{"lineNum":"  507","line":"\ttype Err = ParseError;"},
{"lineNum":"  508","line":""},
{"lineNum":"  509","line":"\tfn from_base32(field_data: &[u5]) -> Result<Fallback, ParseError> {","class":"linePartCov","hits":"1","order":"2236","possible_hits":"2",},
{"lineNum":"  510","line":"\t\tif field_data.len() < 1 {","class":"lineCov","hits":"2","order":"2238","possible_hits":"2",},
{"lineNum":"  511","line":"\t\t\treturn Err(ParseError::UnexpectedEndOfTaggedFields);","class":"lineCov","hits":"1","order":"2301","possible_hits":"1",},
{"lineNum":"  512","line":"\t\t}"},
{"lineNum":"  513","line":""},
{"lineNum":"  514","line":"\t\tlet version = field_data[0];","class":"linePartCov","hits":"1","order":"2240","possible_hits":"2",},
{"lineNum":"  515","line":"\t\tlet bytes = Vec::<u8>::from_base32(&field_data[1..])?;","class":"linePartCov","hits":"1","order":"2241","possible_hits":"4",},
{"lineNum":"  516","line":""},
{"lineNum":"  517","line":"\t\tmatch version.to_u8() {","class":"lineCov","hits":"5","order":"2253","possible_hits":"5",},
{"lineNum":"  518","line":"\t\t\t0...16 => {","class":"lineCov","hits":"2","order":"2261","possible_hits":"2",},
{"lineNum":"  519","line":"\t\t\t\tif bytes.len() < 2 || bytes.len() > 40 {","class":"linePartCov","hits":"1","order":"2280","possible_hits":"2",},
{"lineNum":"  520","line":"\t\t\t\t\treturn Err(ParseError::InvalidSegWitProgramLength);","class":"lineCov","hits":"2","order":"2302","possible_hits":"2",},
{"lineNum":"  521","line":"\t\t\t\t}"},
{"lineNum":"  522","line":""},
{"lineNum":"  523","line":"\t\t\t\tOk(Fallback::SegWitProgram {","class":"lineCov","hits":"1","order":"2285","possible_hits":"1",},
{"lineNum":"  524","line":"\t\t\t\t\tversion: version,","class":"lineCov","hits":"1","order":"2282","possible_hits":"1",},
{"lineNum":"  525","line":"\t\t\t\t\tprogram: bytes","class":"lineCov","hits":"1","order":"2284","possible_hits":"1",},
{"lineNum":"  526","line":"\t\t\t\t})"},
{"lineNum":"  527","line":"\t\t\t},"},
{"lineNum":"  528","line":"\t\t\t17 => {","class":"lineCov","hits":"1","order":"2262","possible_hits":"1",},
{"lineNum":"  529","line":"\t\t\t\tif bytes.len() != 20 {","class":"lineCov","hits":"2","order":"2263","possible_hits":"2",},
{"lineNum":"  530","line":"\t\t\t\t\treturn Err(ParseError::InvalidPubKeyHashLength);","class":"lineCov","hits":"1","order":"2305","possible_hits":"1",},
{"lineNum":"  531","line":"\t\t\t\t}"},
{"lineNum":"  532","line":"\t\t\t\t//TODO: refactor once const generics are available"},
{"lineNum":"  533","line":"\t\t\t\tlet mut pkh = [0u8; 20];","class":"lineCov","hits":"1","order":"2264","possible_hits":"1",},
{"lineNum":"  534","line":"\t\t\t\tpkh.copy_from_slice(&bytes);","class":"lineCov","hits":"1","order":"2265","possible_hits":"1",},
{"lineNum":"  535","line":"\t\t\t\tOk(Fallback::PubKeyHash(pkh))","class":"lineCov","hits":"1","order":"2266","possible_hits":"1",},
{"lineNum":"  536","line":"\t\t\t}"},
{"lineNum":"  537","line":"\t\t\t18 => {"},
{"lineNum":"  538","line":"\t\t\t\tif bytes.len() != 20 {","class":"lineCov","hits":"2","order":"2273","possible_hits":"2",},
{"lineNum":"  539","line":"\t\t\t\t\treturn Err(ParseError::InvalidScriptHashLength);","class":"lineCov","hits":"1","order":"2308","possible_hits":"1",},
{"lineNum":"  540","line":"\t\t\t\t}"},
{"lineNum":"  541","line":"\t\t\t\tlet mut sh = [0u8; 20];","class":"lineCov","hits":"1","order":"2275","possible_hits":"1",},
{"lineNum":"  542","line":"\t\t\t\tsh.copy_from_slice(&bytes);","class":"lineCov","hits":"1","order":"2276","possible_hits":"1",},
{"lineNum":"  543","line":"\t\t\t\tOk(Fallback::ScriptHash(sh))","class":"lineCov","hits":"1","order":"2278","possible_hits":"1",},
{"lineNum":"  544","line":"\t\t\t}"},
{"lineNum":"  545","line":"\t\t\t_ => Err(ParseError::Skip)","class":"lineCov","hits":"1","order":"2300","possible_hits":"1",},
{"lineNum":"  546","line":"\t\t}"},
{"lineNum":"  547","line":"\t}","class":"linePartCov","hits":"4","order":"2267","possible_hits":"7",},
{"lineNum":"  548","line":"}"},
{"lineNum":"  549","line":""},
{"lineNum":"  550","line":"impl FromBase32 for Route {"},
{"lineNum":"  551","line":"\ttype Err = ParseError;"},
{"lineNum":"  552","line":""},
{"lineNum":"  553","line":"\tfn from_base32(field_data: &[u5]) -> Result<Route, ParseError> {","class":"linePartCov","hits":"1","order":"2697","possible_hits":"2",},
{"lineNum":"  554","line":"\t\tlet bytes = Vec::<u8>::from_base32(field_data)?;","class":"linePartCov","hits":"2","order":"2698","possible_hits":"5",},
{"lineNum":"  555","line":""},
{"lineNum":"  556","line":"\t\tif bytes.len() % 51 != 0 {","class":"lineCov","hits":"2","order":"2699","possible_hits":"2",},
{"lineNum":"  557","line":"\t\t\treturn Err(ParseError::UnexpectedEndOfTaggedFields);","class":"lineCov","hits":"2","order":"2800","possible_hits":"2",},
{"lineNum":"  558","line":"\t\t}"},
{"lineNum":"  559","line":""},
{"lineNum":"  560","line":"\t\tlet mut route_hops = Vec::<RouteHop>::new();","class":"lineCov","hits":"1","order":"2700","possible_hits":"1",},
{"lineNum":"  561","line":""},
{"lineNum":"  562","line":"\t\tlet mut bytes = bytes.as_slice();","class":"lineCov","hits":"1","order":"2701","possible_hits":"1",},
{"lineNum":"  563","line":"\t\twhile !bytes.is_empty() {","class":"lineCov","hits":"4","order":"2705","possible_hits":"4",},
{"lineNum":"  564","line":"\t\t\tlet hop_bytes = &bytes[0..51];","class":"lineCov","hits":"1","order":"2708","possible_hits":"1",},
{"lineNum":"  565","line":"\t\t\tbytes = &bytes[51..];","class":"lineCov","hits":"1","order":"2709","possible_hits":"1",},
{"lineNum":"  566","line":""},
{"lineNum":"  567","line":"\t\t\tlet mut channel_id: [u8; 8] = Default::default();","class":"lineCov","hits":"1","order":"2710","possible_hits":"1",},
{"lineNum":"  568","line":"\t\t\tchannel_id.copy_from_slice(&hop_bytes[33..41]);","class":"lineCov","hits":"1","order":"2714","possible_hits":"1",},
{"lineNum":"  569","line":""},
{"lineNum":"  570","line":"\t\t\tlet hop = RouteHop {","class":"lineCov","hits":"1","order":"2722","possible_hits":"1",},
{"lineNum":"  571","line":"\t\t\t\tpubkey: PublicKey::from_slice(&hop_bytes[0..33])?,","class":"linePartCov","hits":"1","order":"2715","possible_hits":"2",},
{"lineNum":"  572","line":"\t\t\t\tshort_channel_id: channel_id,","class":"lineCov","hits":"1","order":"2716","possible_hits":"1",},
{"lineNum":"  573","line":"\t\t\t\tfee_base_msat: parse_int_be(&hop_bytes[41..45], 256).expect(\"slice too big?\"),","class":"lineCov","hits":"1","order":"2717","possible_hits":"1",},
{"lineNum":"  574","line":"\t\t\t\tfee_proportional_millionths: parse_int_be(&hop_bytes[45..49], 256).expect(\"slice too big?\"),","class":"lineCov","hits":"1","order":"2720","possible_hits":"1",},
{"lineNum":"  575","line":"\t\t\t\tcltv_expiry_delta: parse_int_be(&hop_bytes[49..51], 256).expect(\"slice too big?\")","class":"lineCov","hits":"1","order":"2721","possible_hits":"1",},
{"lineNum":"  576","line":"\t\t\t};"},
{"lineNum":"  577","line":""},
{"lineNum":"  578","line":"\t\t\troute_hops.push(hop);","class":"lineCov","hits":"1","order":"2723","possible_hits":"1",},
{"lineNum":"  579","line":"\t\t}"},
{"lineNum":"  580","line":""},
{"lineNum":"  581","line":"\t\tOk(Route(route_hops))","class":"lineCov","hits":"1","order":"2724","possible_hits":"1",},
{"lineNum":"  582","line":"\t}","class":"linePartCov","hits":"4","order":"2725","possible_hits":"8",},
{"lineNum":"  583","line":"}"},
{"lineNum":"  584","line":""},
{"lineNum":"  585","line":"/// Errors that indicate what is wrong with the invoice. They have some granularity for debug"},
{"lineNum":"  586","line":"/// reasons, but should generally result in an \"invalid BOLT11 invoice\" message for the user."},
{"lineNum":"  587","line":"#[allow(missing_docs)]"},
{"lineNum":"  588","line":"#[derive(PartialEq, Debug, Clone)]","class":"linePartCov","hits":"3","order":"1509","possible_hits":"15",},
{"lineNum":"  589","line":"pub enum ParseError {"},
{"lineNum":"  590","line":"\tBech32Error(bech32::Error),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  591","line":"\tParseAmountError(ParseIntError),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  592","line":"\tMalformedSignature(secp256k1::Error),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  593","line":"\tBadPrefix,"},
{"lineNum":"  594","line":"\tUnknownCurrency,"},
{"lineNum":"  595","line":"\tUnknownSiPrefix,"},
{"lineNum":"  596","line":"\tMalformedHRP,"},
{"lineNum":"  597","line":"\tTooShortDataPart,"},
{"lineNum":"  598","line":"\tUnexpectedEndOfTaggedFields,"},
{"lineNum":"  599","line":"\tDescriptionDecodeError(str::Utf8Error),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  600","line":"\tPaddingError,"},
{"lineNum":"  601","line":"\tIntegerOverflowError,"},
{"lineNum":"  602","line":"\tInvalidSegWitProgramLength,"},
{"lineNum":"  603","line":"\tInvalidPubKeyHashLength,"},
{"lineNum":"  604","line":"\tInvalidScriptHashLength,"},
{"lineNum":"  605","line":"\tInvalidRecoveryId,"},
{"lineNum":"  606","line":"\tInvalidSliceLength(String),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  607","line":""},
{"lineNum":"  608","line":"\t/// Not an error, but used internally to signal that a part of the invoice should be ignored"},
{"lineNum":"  609","line":"\t/// according to BOLT11"},
{"lineNum":"  610","line":"\tSkip,"},
{"lineNum":"  611","line":"\tTimestampOverflow,"},
{"lineNum":"  612","line":"}"},
{"lineNum":"  613","line":""},
{"lineNum":"  614","line":"/// Indicates that something went wrong while parsing or validating the invoice. Parsing errors"},
{"lineNum":"  615","line":"/// should be mostly seen as opaque and are only there for debugging reasons. Semantic errors"},
{"lineNum":"  616","line":"/// like wrong signatures, missing fields etc. could mean that someone tampered with the invoice."},
{"lineNum":"  617","line":"#[derive(PartialEq, Debug, Clone)]"},
{"lineNum":"  618","line":"pub enum ParseOrSemanticError {"},
{"lineNum":"  619","line":"\t/// The invoice couldn\'t be decoded"},
{"lineNum":"  620","line":"\tParseError(ParseError),"},
{"lineNum":"  621","line":""},
{"lineNum":"  622","line":"\t/// The invoice could be decoded but violates the BOLT11 standard"},
{"lineNum":"  623","line":"\tSemanticError(::SemanticError),"},
{"lineNum":"  624","line":"}"},
{"lineNum":"  625","line":""},
{"lineNum":"  626","line":"impl Display for ParseError {"},
{"lineNum":"  627","line":"\tfn fmt(&self, f: &mut Formatter) -> fmt::Result {"},
{"lineNum":"  628","line":"\t\tuse self::ParseError::*;"},
{"lineNum":"  629","line":"\t\tuse std::error::Error;"},
{"lineNum":"  630","line":"\t\tmatch *self {"},
{"lineNum":"  631","line":"\t\t\t// TODO: find a way to combine the first three arms (e as error::Error?)"},
{"lineNum":"  632","line":"\t\t\tBech32Error(ref e) => {"},
{"lineNum":"  633","line":"\t\t\t\twrite!(f, \"{} ({})\", self.description(), e)"},
{"lineNum":"  634","line":"\t\t\t}"},
{"lineNum":"  635","line":"\t\t\tParseAmountError(ref e) => {"},
{"lineNum":"  636","line":"\t\t\t\twrite!(f, \"{} ({})\", self.description(), e)"},
{"lineNum":"  637","line":"\t\t\t}"},
{"lineNum":"  638","line":"\t\t\tMalformedSignature(ref e) => {"},
{"lineNum":"  639","line":"\t\t\t\twrite!(f, \"{} ({})\", self.description(), e)"},
{"lineNum":"  640","line":"\t\t\t}"},
{"lineNum":"  641","line":"\t\t\tDescriptionDecodeError(ref e) => {"},
{"lineNum":"  642","line":"\t\t\t\twrite!(f, \"{} ({})\", self.description(), e)"},
{"lineNum":"  643","line":"\t\t\t}"},
{"lineNum":"  644","line":"\t\t\tInvalidSliceLength(ref function) => {"},
{"lineNum":"  645","line":"\t\t\t\twrite!(f, \"{} (in function {})\", self.description(), function)"},
{"lineNum":"  646","line":"\t\t\t}"},
{"lineNum":"  647","line":"\t\t\t_ => {"},
{"lineNum":"  648","line":"\t\t\t\twrite!(f, \"{}\", self.description())"},
{"lineNum":"  649","line":"\t\t\t}"},
{"lineNum":"  650","line":"\t\t}"},
{"lineNum":"  651","line":"\t}"},
{"lineNum":"  652","line":"}"},
{"lineNum":"  653","line":""},
{"lineNum":"  654","line":"impl error::Error for ParseError {"},
{"lineNum":"  655","line":"\tfn description(&self) -> &str {"},
{"lineNum":"  656","line":"\t\tuse self::ParseError::*;"},
{"lineNum":"  657","line":"\t\tmatch *self {"},
{"lineNum":"  658","line":"\t\t\tBech32Error(_) => \"invalid bech32\","},
{"lineNum":"  659","line":"\t\t\tParseAmountError(_) => \"invalid amount in hrp\","},
{"lineNum":"  660","line":"\t\t\tMalformedSignature(_) => \"invalid secp256k1 signature\","},
{"lineNum":"  661","line":"\t\t\tBadPrefix => \"did not begin with \'ln\'\","},
{"lineNum":"  662","line":"\t\t\tUnknownCurrency => \"currency code unknown\","},
{"lineNum":"  663","line":"\t\t\tUnknownSiPrefix => \"unknown SI prefix\","},
{"lineNum":"  664","line":"\t\t\tMalformedHRP => \"malformed human readable part\","},
{"lineNum":"  665","line":"\t\t\tTooShortDataPart => \"data part too short (should be at least 111 bech32 chars long)\","},
{"lineNum":"  666","line":"\t\t\tUnexpectedEndOfTaggedFields => \"tagged fields part ended unexpectedly\","},
{"lineNum":"  667","line":"\t\t\tDescriptionDecodeError(_) => \"description is no valid utf-8 string\","},
{"lineNum":"  668","line":"\t\t\tPaddingError => \"some data field had bad padding\","},
{"lineNum":"  669","line":"\t\t\tIntegerOverflowError => \"parsed integer doesn\'t fit into receiving type\","},
{"lineNum":"  670","line":"\t\t\tInvalidSegWitProgramLength => \"fallback SegWit program is too long or too short\","},
{"lineNum":"  671","line":"\t\t\tInvalidPubKeyHashLength => \"fallback public key hash has a length unequal 20 bytes\","},
{"lineNum":"  672","line":"\t\t\tInvalidScriptHashLength => \"fallback script hash has a length unequal 32 bytes\","},
{"lineNum":"  673","line":"\t\t\tInvalidRecoveryId => \"recovery id is out of range (should be in [0,3])\","},
{"lineNum":"  674","line":"\t\t\tInvalidSliceLength(_) => \"some slice had the wrong length\","},
{"lineNum":"  675","line":"\t\t\tSkip => \"the tagged field has to be skipped because of an unexpected, but allowed property\","},
{"lineNum":"  676","line":"\t\t\tTimestampOverflow => \"the invoice\'s timestamp could not be represented as SystemTime\","},
{"lineNum":"  677","line":"\t\t}"},
{"lineNum":"  678","line":"\t}"},
{"lineNum":"  679","line":"}"},
{"lineNum":"  680","line":""},
{"lineNum":"  681","line":"macro_rules! from_error {"},
{"lineNum":"  682","line":"    ($my_error:expr, $extern_error:ty) => {"},
{"lineNum":"  683","line":"        impl From<$extern_error> for ParseError {"},
{"lineNum":"  684","line":"            fn from(e: $extern_error) -> Self {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  685","line":"                $my_error(e)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  686","line":"            }","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  687","line":"        }"},
{"lineNum":"  688","line":"    }"},
{"lineNum":"  689","line":"}"},
{"lineNum":"  690","line":""},
{"lineNum":"  691","line":"from_error!(ParseError::MalformedSignature, secp256k1::Error);"},
{"lineNum":"  692","line":"from_error!(ParseError::ParseAmountError, ParseIntError);"},
{"lineNum":"  693","line":"from_error!(ParseError::DescriptionDecodeError, str::Utf8Error);"},
{"lineNum":"  694","line":""},
{"lineNum":"  695","line":"impl From<bech32::Error> for ParseError {"},
{"lineNum":"  696","line":"\tfn from(e: bech32::Error) -> Self {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  697","line":"\t\tmatch e {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  698","line":"\t\t\tbech32::Error::InvalidPadding => ParseError::PaddingError,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  699","line":"\t\t\t_ => ParseError::Bech32Error(e)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  700","line":"\t\t}"},
{"lineNum":"  701","line":"\t}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  702","line":"}"},
{"lineNum":"  703","line":""},
{"lineNum":"  704","line":"impl From<ParseError> for ParseOrSemanticError {"},
{"lineNum":"  705","line":"\tfn from(e: ParseError) -> Self {"},
{"lineNum":"  706","line":"\t\tParseOrSemanticError::ParseError(e)"},
{"lineNum":"  707","line":"\t}"},
{"lineNum":"  708","line":"}"},
{"lineNum":"  709","line":""},
{"lineNum":"  710","line":"impl From<::SemanticError> for ParseOrSemanticError {"},
{"lineNum":"  711","line":"\tfn from(e: SemanticError) -> Self {"},
{"lineNum":"  712","line":"\t\tParseOrSemanticError::SemanticError(e)"},
{"lineNum":"  713","line":"\t}"},
{"lineNum":"  714","line":"}"},
{"lineNum":"  715","line":""},
{"lineNum":"  716","line":"#[cfg(test)]"},
{"lineNum":"  717","line":"mod test {"},
{"lineNum":"  718","line":"\tuse de::ParseError;"},
{"lineNum":"  719","line":"\tuse secp256k1::PublicKey;"},
{"lineNum":"  720","line":"\tuse bech32::u5;"},
{"lineNum":"  721","line":"\tuse bitcoin_hashes::hex::FromHex;"},
{"lineNum":"  722","line":"\tuse bitcoin_hashes::sha256;"},
{"lineNum":"  723","line":""},
{"lineNum":"  724","line":"\tconst CHARSET_REV: [i8; 128] = ["},
{"lineNum":"  725","line":"\t\t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,"},
{"lineNum":"  726","line":"\t\t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,"},
{"lineNum":"  727","line":"\t\t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,"},
{"lineNum":"  728","line":"\t\t15, -1, 10, 17, 21, 20, 26, 30, 7, 5, -1, -1, -1, -1, -1, -1,"},
{"lineNum":"  729","line":"\t\t-1, 29, -1, 24, 13, 25, 9, 8, 23, -1, 18, 22, 31, 27, 19, -1,"},
{"lineNum":"  730","line":"\t\t1, 0, 3, 16, 11, 28, 12, 14, 6, 4, 2, -1, -1, -1, -1, -1,"},
{"lineNum":"  731","line":"\t\t-1, 29, -1, 24, 13, 25, 9, 8, 23, -1, 18, 22, 31, 27, 19, -1,"},
{"lineNum":"  732","line":"\t\t1, 0, 3, 16, 11, 28, 12, 14, 6, 4, 2, -1, -1, -1, -1, -1"},
{"lineNum":"  733","line":"\t];"},
{"lineNum":"  734","line":""},
{"lineNum":"  735","line":"\tfn from_bech32(bytes_5b: &[u8]) -> Vec<u5> {","class":"lineCov","hits":"1","order":"1424","possible_hits":"1",},
{"lineNum":"  736","line":"\t\tbytes_5b","class":"lineCov","hits":"1","order":"1426","possible_hits":"1",},
{"lineNum":"  737","line":"\t\t\t.iter()"},
{"lineNum":"  738","line":"\t\t\t.map(|c| u5::try_from_u8(CHARSET_REV[*c as usize] as u8).unwrap())","class":"lineCov","hits":"2","order":"1739","possible_hits":"2",},
{"lineNum":"  739","line":"\t\t\t.collect()"},
{"lineNum":"  740","line":"\t}","class":"linePartCov","hits":"1","order":"1764","possible_hits":"2",},
{"lineNum":"  741","line":""},
{"lineNum":"  742","line":"\t#[test]"},
{"lineNum":"  743","line":"\tfn test_parse_currency_prefix() {","class":"linePartCov","hits":"3","order":"1416","possible_hits":"4",},
{"lineNum":"  744","line":"\t\tuse Currency;"},
{"lineNum":"  745","line":""},
{"lineNum":"  746","line":"\t\tassert_eq!(\"bc\".parse::<Currency>(), Ok(Currency::Bitcoin));","class":"lineCov","hits":"2","order":"1418","possible_hits":"2",},
{"lineNum":"  747","line":"\t\tassert_eq!(\"tb\".parse::<Currency>(), Ok(Currency::BitcoinTestnet));","class":"lineCov","hits":"1","order":"1484","possible_hits":"1",},
{"lineNum":"  748","line":"\t\tassert_eq!(\"bcrt\".parse::<Currency>(), Ok(Currency::Regtest));","class":"lineCov","hits":"1","order":"1491","possible_hits":"1",},
{"lineNum":"  749","line":"\t\tassert_eq!(\"something_else\".parse::<Currency>(), Err(ParseError::UnknownCurrency))","class":"lineCov","hits":"2","order":"1502","possible_hits":"2",},
{"lineNum":"  750","line":"\t}","class":"linePartCov","hits":"2","order":"1511","possible_hits":"4",},
{"lineNum":"  751","line":""},
{"lineNum":"  752","line":"\t#[test]"},
{"lineNum":"  753","line":"\tfn test_parse_int_from_bytes_be() {","class":"lineCov","hits":"3","order":"2315","possible_hits":"3",},
{"lineNum":"  754","line":"\t\tuse de::parse_int_be;"},
{"lineNum":"  755","line":""},
{"lineNum":"  756","line":"\t\tassert_eq!(parse_int_be::<u32, u8>(&[1, 2, 3, 4], 256), Some(16909060));","class":"lineCov","hits":"1","order":"2316","possible_hits":"1",},
{"lineNum":"  757","line":"\t\tassert_eq!(parse_int_be::<u32, u8>(&[1, 3], 32), Some(35));","class":"lineCov","hits":"1","order":"2318","possible_hits":"1",},
{"lineNum":"  758","line":"\t\tassert_eq!(parse_int_be::<u32, u8>(&[255, 255, 255, 255], 256), Some(4294967295));","class":"lineCov","hits":"1","order":"2319","possible_hits":"1",},
{"lineNum":"  759","line":"\t\tassert_eq!(parse_int_be::<u32, u8>(&[1, 0, 0, 0, 0], 256), None);","class":"lineCov","hits":"1","order":"2320","possible_hits":"1",},
{"lineNum":"  760","line":"\t}","class":"linePartCov","hits":"2","order":"2321","possible_hits":"4",},
{"lineNum":"  761","line":""},
{"lineNum":"  762","line":"\t#[test]"},
{"lineNum":"  763","line":"\tfn test_parse_sha256_hash() {","class":"linePartCov","hits":"3","order":"2728","possible_hits":"4",},
{"lineNum":"  764","line":"\t\tuse Sha256;"},
{"lineNum":"  765","line":"\t\tuse bech32::FromBase32;"},
{"lineNum":"  766","line":""},
{"lineNum":"  767","line":"\t\tlet input = from_bech32(","class":"lineCov","hits":"1","order":"2730","possible_hits":"1",},
{"lineNum":"  768","line":"\t\t\t\"qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypq\".as_bytes()","class":"lineCov","hits":"1","order":"2729","possible_hits":"1",},
{"lineNum":"  769","line":"\t\t);"},
{"lineNum":"  770","line":""},
{"lineNum":"  771","line":"\t\tlet hash = sha256::Hash::from_hex(","class":"lineCov","hits":"1","order":"2731","possible_hits":"1",},
{"lineNum":"  772","line":"\t\t\t\"0001020304050607080900010203040506070809000102030405060708090102\""},
{"lineNum":"  773","line":"\t\t).unwrap();"},
{"lineNum":"  774","line":"\t\tlet expected = Ok(Sha256(hash));","class":"lineCov","hits":"1","order":"2856","possible_hits":"1",},
{"lineNum":"  775","line":""},
{"lineNum":"  776","line":"\t\tassert_eq!(Sha256::from_base32(&input), expected);","class":"lineCov","hits":"2","order":"2857","possible_hits":"2",},
{"lineNum":"  777","line":""},
{"lineNum":"  778","line":"\t\t// make sure hashes of unknown length get skipped"},
{"lineNum":"  779","line":"\t\tlet input_unexpected_length = from_bech32(","class":"lineCov","hits":"1","order":"2873","possible_hits":"1",},
{"lineNum":"  780","line":"\t\t\t\"qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypyq\".as_bytes()"},
{"lineNum":"  781","line":"\t\t);"},
{"lineNum":"  782","line":"\t\tassert_eq!(Sha256::from_base32(&input_unexpected_length), Err(ParseError::Skip));","class":"lineCov","hits":"2","order":"2874","possible_hits":"2",},
{"lineNum":"  783","line":"\t}","class":"linePartCov","hits":"2","order":"2876","possible_hits":"6",},
{"lineNum":"  784","line":""},
{"lineNum":"  785","line":"\t#[test]"},
{"lineNum":"  786","line":"\tfn test_parse_description() {","class":"linePartCov","hits":"3","order":"1417","possible_hits":"4",},
{"lineNum":"  787","line":"\t\tuse ::Description;"},
{"lineNum":"  788","line":"\t\tuse bech32::FromBase32;"},
{"lineNum":"  789","line":""},
{"lineNum":"  790","line":"\t\tlet input = from_bech32(\"xysxxatsyp3k7enxv4js\".as_bytes());","class":"lineCov","hits":"2","order":"1421","possible_hits":"2",},
{"lineNum":"  791","line":"\t\tlet expected = Ok(Description::new(\"1 cup coffee\".to_owned()).unwrap());","class":"lineCov","hits":"2","order":"1765","possible_hits":"2",},
{"lineNum":"  792","line":"\t\tassert_eq!(Description::from_base32(&input), expected);","class":"lineCov","hits":"2","order":"1855","possible_hits":"2",},
{"lineNum":"  793","line":"\t}","class":"linePartCov","hits":"2","order":"1949","possible_hits":"5",},
{"lineNum":"  794","line":""},
{"lineNum":"  795","line":"\t#[test]"},
{"lineNum":"  796","line":"\tfn test_parse_payee_pub_key() {","class":"linePartCov","hits":"3","order":"2334","possible_hits":"4",},
{"lineNum":"  797","line":"\t\tuse ::PayeePubKey;"},
{"lineNum":"  798","line":"\t\tuse bech32::FromBase32;"},
{"lineNum":"  799","line":""},
{"lineNum":"  800","line":"\t\tlet input = from_bech32(\"q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66\".as_bytes());","class":"lineCov","hits":"2","order":"2335","possible_hits":"2",},
{"lineNum":"  801","line":"\t\tlet pk_bytes = [","class":"lineCov","hits":"1","order":"2336","possible_hits":"1",},
{"lineNum":"  802","line":"\t\t\t0x03, 0xe7, 0x15, 0x6a, 0xe3, 0x3b, 0x0a, 0x20, 0x8d, 0x07, 0x44, 0x19, 0x91, 0x63,"},
{"lineNum":"  803","line":"\t\t\t0x17, 0x7e, 0x90, 0x9e, 0x80, 0x17, 0x6e, 0x55, 0xd9, 0x7a, 0x2f, 0x22, 0x1e, 0xde,"},
{"lineNum":"  804","line":"\t\t\t0x0f, 0x93, 0x4d, 0xd9, 0xad"},
{"lineNum":"  805","line":"\t\t];"},
{"lineNum":"  806","line":"\t\tlet expected = Ok(PayeePubKey(","class":"lineCov","hits":"1","order":"2664","possible_hits":"1",},
{"lineNum":"  807","line":"\t\t\tPublicKey::from_slice(&pk_bytes[..]).unwrap()","class":"lineCov","hits":"2","order":"2337","possible_hits":"2",},
{"lineNum":"  808","line":"\t\t));"},
{"lineNum":"  809","line":""},
{"lineNum":"  810","line":"\t\tassert_eq!(PayeePubKey::from_base32(&input), expected);","class":"lineCov","hits":"2","order":"2665","possible_hits":"2",},
{"lineNum":"  811","line":""},
{"lineNum":"  812","line":"\t\t// expects 33 bytes"},
{"lineNum":"  813","line":"\t\tlet input_unexpected_length = from_bech32(","class":"lineCov","hits":"1","order":"2687","possible_hits":"1",},
{"lineNum":"  814","line":"\t\t\t\"q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhvq\".as_bytes()"},
{"lineNum":"  815","line":"\t\t);"},
{"lineNum":"  816","line":"\t\tassert_eq!(PayeePubKey::from_base32(&input_unexpected_length), Err(ParseError::Skip));","class":"lineCov","hits":"2","order":"2688","possible_hits":"2",},
{"lineNum":"  817","line":"\t}","class":"linePartCov","hits":"2","order":"2690","possible_hits":"6",},
{"lineNum":"  818","line":""},
{"lineNum":"  819","line":"\t#[test]"},
{"lineNum":"  820","line":"\tfn test_parse_expiry_time() {","class":"linePartCov","hits":"3","order":"2209","possible_hits":"4",},
{"lineNum":"  821","line":"\t\tuse ::ExpiryTime;"},
{"lineNum":"  822","line":"\t\tuse bech32::FromBase32;"},
{"lineNum":"  823","line":""},
{"lineNum":"  824","line":"\t\tlet input = from_bech32(\"pu\".as_bytes());","class":"lineCov","hits":"2","order":"2213","possible_hits":"2",},
{"lineNum":"  825","line":"\t\tlet expected = Ok(ExpiryTime::from_seconds(60).unwrap());","class":"lineCov","hits":"2","order":"2216","possible_hits":"2",},
{"lineNum":"  826","line":"\t\tassert_eq!(ExpiryTime::from_base32(&input), expected);","class":"lineCov","hits":"2","order":"2228","possible_hits":"2",},
{"lineNum":"  827","line":""},
{"lineNum":"  828","line":"\t\tlet input_too_large = from_bech32(\"sqqqqqqqqqqqq\".as_bytes());","class":"lineCov","hits":"1","order":"2303","possible_hits":"1",},
{"lineNum":"  829","line":"\t\tassert_eq!(ExpiryTime::from_base32(&input_too_large), Err(ParseError::IntegerOverflowError));","class":"lineCov","hits":"2","order":"2304","possible_hits":"2",},
{"lineNum":"  830","line":"\t}","class":"linePartCov","hits":"2","order":"2310","possible_hits":"6",},
{"lineNum":"  831","line":""},
{"lineNum":"  832","line":"\t#[test]"},
{"lineNum":"  833","line":"\tfn test_parse_min_final_cltv_expiry() {","class":"linePartCov","hits":"3","order":"2322","possible_hits":"4",},
{"lineNum":"  834","line":"\t\tuse ::MinFinalCltvExpiry;"},
{"lineNum":"  835","line":"\t\tuse bech32::FromBase32;"},
{"lineNum":"  836","line":""},
{"lineNum":"  837","line":"\t\tlet input = from_bech32(\"pr\".as_bytes());","class":"lineCov","hits":"2","order":"2323","possible_hits":"2",},
{"lineNum":"  838","line":"\t\tlet expected = Ok(MinFinalCltvExpiry(35));","class":"lineCov","hits":"1","order":"2324","possible_hits":"1",},
{"lineNum":"  839","line":""},
{"lineNum":"  840","line":"\t\tassert_eq!(MinFinalCltvExpiry::from_base32(&input), expected);","class":"lineCov","hits":"2","order":"2325","possible_hits":"2",},
{"lineNum":"  841","line":"\t}","class":"linePartCov","hits":"2","order":"2333","possible_hits":"4",},
{"lineNum":"  842","line":""},
{"lineNum":"  843","line":"\t#[test]"},
{"lineNum":"  844","line":"\tfn test_parse_fallback() {","class":"linePartCov","hits":"3","order":"2075","possible_hits":"4",},
{"lineNum":"  845","line":"\t\tuse Fallback;"},
{"lineNum":"  846","line":"\t\tuse bech32::FromBase32;"},
{"lineNum":"  847","line":""},
{"lineNum":"  848","line":"\t\tlet cases = vec![","class":"linePartCov","hits":"2","order":"2076","possible_hits":"10",},
{"lineNum":"  849","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2086","possible_hits":"1",},
{"lineNum":"  850","line":"\t\t\t\tfrom_bech32(\"3x9et2e20v6pu37c5d9vax37wxq72un98\".as_bytes()),","class":"lineCov","hits":"1","order":"2084","possible_hits":"1",},
{"lineNum":"  851","line":"\t\t\t\tOk(Fallback::PubKeyHash([","class":"lineCov","hits":"1","order":"2085","possible_hits":"1",},
{"lineNum":"  852","line":"\t\t\t\t\t0x31, 0x72, 0xb5, 0x65, 0x4f, 0x66, 0x83, 0xc8, 0xfb, 0x14, 0x69, 0x59, 0xd3,"},
{"lineNum":"  853","line":"\t\t\t\t\t0x47, 0xce, 0x30, 0x3c, 0xae, 0x4c, 0xa7"},
{"lineNum":"  854","line":"\t\t\t\t]))"},
{"lineNum":"  855","line":"\t\t\t),"},
{"lineNum":"  856","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2089","possible_hits":"1",},
{"lineNum":"  857","line":"\t\t\t\tfrom_bech32(\"j3a24vwu6r8ejrss3axul8rxldph2q7z9\".as_bytes()),","class":"lineCov","hits":"1","order":"2087","possible_hits":"1",},
{"lineNum":"  858","line":"\t\t\t\tOk(Fallback::ScriptHash([","class":"lineCov","hits":"1","order":"2088","possible_hits":"1",},
{"lineNum":"  859","line":"\t\t\t\t\t0x8f, 0x55, 0x56, 0x3b, 0x9a, 0x19, 0xf3, 0x21, 0xc2, 0x11, 0xe9, 0xb9, 0xf3,"},
{"lineNum":"  860","line":"\t\t\t\t\t0x8c, 0xdf, 0x68, 0x6e, 0xa0, 0x78, 0x45"},
{"lineNum":"  861","line":"\t\t\t\t]))"},
{"lineNum":"  862","line":"\t\t\t),"},
{"lineNum":"  863","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2103","possible_hits":"1",},
{"lineNum":"  864","line":"\t\t\t\tfrom_bech32(\"qw508d6qejxtdg4y5r3zarvary0c5xw7k\".as_bytes()),","class":"lineCov","hits":"1","order":"2090","possible_hits":"1",},
{"lineNum":"  865","line":"\t\t\t\tOk(Fallback::SegWitProgram {","class":"lineCov","hits":"1","order":"2102","possible_hits":"1",},
{"lineNum":"  866","line":"\t\t\t\t\tversion: u5::try_from_u8(0).unwrap(),","class":"lineCov","hits":"1","order":"2091","possible_hits":"1",},
{"lineNum":"  867","line":"\t\t\t\t\tprogram: Vec::from(&[","class":"lineCov","hits":"1","order":"2092","possible_hits":"1",},
{"lineNum":"  868","line":"\t\t\t\t\t\t0x75u8, 0x1e, 0x76, 0xe8, 0x19, 0x91, 0x96, 0xd4, 0x54, 0x94, 0x1c, 0x45,"},
{"lineNum":"  869","line":"\t\t\t\t\t\t0xd1, 0xb3, 0xa3, 0x23, 0xf1, 0x43, 0x3b, 0xd6"},
{"lineNum":"  870","line":"\t\t\t\t\t][..])"},
{"lineNum":"  871","line":"\t\t\t\t})"},
{"lineNum":"  872","line":"\t\t\t),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  873","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2164","possible_hits":"1",},
{"lineNum":"  874","line":"\t\t\t\tvec![u5::try_from_u8(21).unwrap(); 41],","class":"lineCov","hits":"2","order":"2104","possible_hits":"2",},
{"lineNum":"  875","line":"\t\t\t\tErr(ParseError::Skip)","class":"lineCov","hits":"1","order":"2163","possible_hits":"1",},
{"lineNum":"  876","line":"\t\t\t),"},
{"lineNum":"  877","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2190","possible_hits":"1",},
{"lineNum":"  878","line":"\t\t\t\tvec![],","class":"lineCov","hits":"1","order":"2165","possible_hits":"1",},
{"lineNum":"  879","line":"\t\t\t\tErr(ParseError::UnexpectedEndOfTaggedFields)","class":"lineCov","hits":"1","order":"2189","possible_hits":"1",},
{"lineNum":"  880","line":"\t\t\t),"},
{"lineNum":"  881","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2193","possible_hits":"1",},
{"lineNum":"  882","line":"\t\t\t\tvec![u5::try_from_u8(1).unwrap(); 81],","class":"lineCov","hits":"2","order":"2191","possible_hits":"2",},
{"lineNum":"  883","line":"\t\t\t\tErr(ParseError::InvalidSegWitProgramLength)","class":"lineCov","hits":"1","order":"2192","possible_hits":"1",},
{"lineNum":"  884","line":"\t\t\t),"},
{"lineNum":"  885","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2196","possible_hits":"1",},
{"lineNum":"  886","line":"\t\t\t\tvec![u5::try_from_u8(17).unwrap(); 1],","class":"lineCov","hits":"2","order":"2194","possible_hits":"2",},
{"lineNum":"  887","line":"\t\t\t\tErr(ParseError::InvalidPubKeyHashLength)","class":"lineCov","hits":"1","order":"2195","possible_hits":"1",},
{"lineNum":"  888","line":"\t\t\t),"},
{"lineNum":"  889","line":"\t\t\t(","class":"lineCov","hits":"1","order":"2199","possible_hits":"1",},
{"lineNum":"  890","line":"\t\t\t\tvec![u5::try_from_u8(18).unwrap(); 1],","class":"lineCov","hits":"2","order":"2197","possible_hits":"2",},
{"lineNum":"  891","line":"\t\t\t\tErr(ParseError::InvalidScriptHashLength)","class":"lineCov","hits":"1","order":"2198","possible_hits":"1",},
{"lineNum":"  892","line":"\t\t\t)"},
{"lineNum":"  893","line":"\t\t];"},
{"lineNum":"  894","line":""},
{"lineNum":"  895","line":"\t\tfor (input, expected) in cases.into_iter() {","class":"linePartCov","hits":"5","order":"2200","possible_hits":"7",},
{"lineNum":"  896","line":"\t\t\tassert_eq!(Fallback::from_base32(&input), expected);","class":"lineCov","hits":"3","order":"2235","possible_hits":"3",},
{"lineNum":"  897","line":"\t\t}","class":"linePartCov","hits":"2","order":"2272","possible_hits":"5",},
{"lineNum":"  898","line":"\t}","class":"linePartCov","hits":"2","order":"2314","possible_hits":"4",},
{"lineNum":"  899","line":""},
{"lineNum":"  900","line":"\t#[test]"},
{"lineNum":"  901","line":"\tfn test_parse_route() {","class":"linePartCov","hits":"3","order":"2377","possible_hits":"4",},
{"lineNum":"  902","line":"\t\tuse RouteHop;"},
{"lineNum":"  903","line":"\t\tuse ::Route;"},
{"lineNum":"  904","line":"\t\tuse bech32::FromBase32;"},
{"lineNum":"  905","line":""},
{"lineNum":"  906","line":"\t\tlet input = from_bech32(","class":"lineCov","hits":"2","order":"2380","possible_hits":"2",},
{"lineNum":"  907","line":"\t\t\t\"q20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvpeuqa\\","class":"lineCov","hits":"1","order":"2383","possible_hits":"1",},
{"lineNum":"  908","line":"\t\t\tfqxu92d8lr6fvg0r5gv0heeeqgcrqlnm6jhphu9y00rrhy4grqszsvpcgpy9qqqqqqgqqqqq7qqzq\".as_bytes()"},
{"lineNum":"  909","line":"\t\t);"},
{"lineNum":"  910","line":""},
{"lineNum":"  911","line":"\t\tlet mut expected = Vec::<RouteHop>::new();","class":"lineCov","hits":"1","order":"2386","possible_hits":"1",},
{"lineNum":"  912","line":"\t\texpected.push(RouteHop {","class":"lineCov","hits":"2","order":"2416","possible_hits":"2",},
{"lineNum":"  913","line":"\t\t\tpubkey: PublicKey::from_slice(","class":"lineCov","hits":"1","order":"2420","possible_hits":"1",},
{"lineNum":"  914","line":"\t\t\t\t&[","class":"lineCov","hits":"1","order":"2418","possible_hits":"1",},
{"lineNum":"  915","line":"\t\t\t\t\t0x02u8, 0x9e, 0x03, 0xa9, 0x01, 0xb8, 0x55, 0x34, 0xff, 0x1e, 0x92, 0xc4, 0x3c,"},
{"lineNum":"  916","line":"\t\t\t\t\t0x74, 0x43, 0x1f, 0x7c, 0xe7, 0x20, 0x46, 0x06, 0x0f, 0xcf, 0x7a, 0x95, 0xc3,"},
{"lineNum":"  917","line":"\t\t\t\t\t0x7e, 0x14, 0x8f, 0x78, 0xc7, 0x72, 0x55"},
{"lineNum":"  918","line":"\t\t\t\t][..]"},
{"lineNum":"  919","line":"\t\t\t).unwrap(),"},
{"lineNum":"  920","line":"\t\t\tshort_channel_id: [0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],","class":"lineCov","hits":"1","order":"2663","possible_hits":"1",},
{"lineNum":"  921","line":"\t\t\tfee_base_msat: 1,"},
{"lineNum":"  922","line":"\t\t\tfee_proportional_millionths: 20,"},
{"lineNum":"  923","line":"\t\t\tcltv_expiry_delta: 3"},
{"lineNum":"  924","line":"\t\t});"},
{"lineNum":"  925","line":"\t\texpected.push(RouteHop {","class":"lineCov","hits":"1","order":"2694","possible_hits":"1",},
{"lineNum":"  926","line":"\t\t\tpubkey: PublicKey::from_slice(","class":"lineCov","hits":"1","order":"2692","possible_hits":"1",},
{"lineNum":"  927","line":"\t\t\t\t&[","class":"lineCov","hits":"1","order":"2691","possible_hits":"1",},
{"lineNum":"  928","line":"\t\t\t\t\t0x03u8, 0x9e, 0x03, 0xa9, 0x01, 0xb8, 0x55, 0x34, 0xff, 0x1e, 0x92, 0xc4, 0x3c,"},
{"lineNum":"  929","line":"\t\t\t\t\t0x74, 0x43, 0x1f, 0x7c, 0xe7, 0x20, 0x46, 0x06, 0x0f, 0xcf, 0x7a, 0x95, 0xc3,"},
{"lineNum":"  930","line":"\t\t\t\t\t0x7e, 0x14, 0x8f, 0x78, 0xc7, 0x72, 0x55"},
{"lineNum":"  931","line":"\t\t\t\t][..]"},
{"lineNum":"  932","line":"\t\t\t).unwrap(),"},
{"lineNum":"  933","line":"\t\t\tshort_channel_id: [0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a],","class":"lineCov","hits":"1","order":"2693","possible_hits":"1",},
{"lineNum":"  934","line":"\t\t\tfee_base_msat: 2,"},
{"lineNum":"  935","line":"\t\t\tfee_proportional_millionths: 30,"},
{"lineNum":"  936","line":"\t\t\tcltv_expiry_delta: 4"},
{"lineNum":"  937","line":"\t\t});"},
{"lineNum":"  938","line":""},
{"lineNum":"  939","line":"\t\tassert_eq!(Route::from_base32(&input), Ok(Route(expected)));","class":"lineCov","hits":"1","order":"2696","possible_hits":"1",},
{"lineNum":"  940","line":""},
{"lineNum":"  941","line":"\t\tassert_eq!(","class":"lineCov","hits":"1","order":"2804","possible_hits":"1",},
{"lineNum":"  942","line":"\t\t\tRoute::from_base32(&[u5::try_from_u8(0).unwrap(); 40][..]),","class":"lineCov","hits":"1","order":"2795","possible_hits":"1",},
{"lineNum":"  943","line":"\t\t\tErr(ParseError::UnexpectedEndOfTaggedFields)"},
{"lineNum":"  944","line":"\t\t);"},
{"lineNum":"  945","line":"\t}","class":"linePartCov","hits":"2","order":"2807","possible_hits":"4",},
{"lineNum":"  946","line":""},
{"lineNum":"  947","line":"\t#[test]"},
{"lineNum":"  948","line":"\tfn test_raw_signed_invoice_deserialization() {","class":"linePartCov","hits":"3","order":"2877","possible_hits":"4",},
{"lineNum":"  949","line":"\t\tuse TaggedField::*;"},
{"lineNum":"  950","line":"\t\tuse secp256k1::recovery::{RecoveryId, RecoverableSignature};"},
{"lineNum":"  951","line":"\t\tuse {SignedRawInvoice, Signature, RawInvoice, RawHrp, RawDataPart, Currency, Sha256,"},
{"lineNum":"  952","line":"\t\t\t PositiveTimestamp};"},
{"lineNum":"  953","line":""},
{"lineNum":"  954","line":"\t\tassert_eq!(","class":"lineCov","hits":"2","order":"3828","possible_hits":"2",},
{"lineNum":"  955","line":"\t\t\t\"lnbc1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdpl2pkx2ctnv5sxxmmw\\","class":"lineCov","hits":"1","order":"2878","possible_hits":"1",},
{"lineNum":"  956","line":"\t\t\twd5kgetjypeh2ursdae8g6twvus8g6rfwvs8qun0dfjkxaq8rkx3yf5tcsyz3d73gafnh3cax9rn449d9p5uxz9\\"},
{"lineNum":"  957","line":"\t\t\tezhhypd0elx87sjle52x86fux2ypatgddc6k63n7erqz25le42c4u4ecky03ylcqca784w\".parse(),"},
{"lineNum":"  958","line":"\t\t\tOk(SignedRawInvoice {","class":"lineCov","hits":"1","order":"3827","possible_hits":"1",},
{"lineNum":"  959","line":"\t\t\t\traw_invoice: RawInvoice {","class":"lineCov","hits":"1","order":"3823","possible_hits":"1",},
{"lineNum":"  960","line":"\t\t\t\t\thrp: RawHrp {","class":"lineCov","hits":"1","order":"3812","possible_hits":"1",},
{"lineNum":"  961","line":"\t\t\t\t\t\tcurrency: Currency::Bitcoin,","class":"lineCov","hits":"1","order":"3809","possible_hits":"1",},
{"lineNum":"  962","line":"\t\t\t\t\t\traw_amount: None,","class":"lineCov","hits":"1","order":"3810","possible_hits":"1",},
{"lineNum":"  963","line":"\t\t\t\t\t\tsi_prefix: None,","class":"lineCov","hits":"1","order":"3811","possible_hits":"1",},
{"lineNum":"  964","line":"\t\t\t\t\t},"},
{"lineNum":"  965","line":"\t\t\t\t\tdata: RawDataPart {","class":"lineCov","hits":"1","order":"3822","possible_hits":"1",},
{"lineNum":"  966","line":"\t\t\t\t\ttimestamp: PositiveTimestamp::from_unix_timestamp(1496314658).unwrap(),","class":"lineCov","hits":"1","order":"3813","possible_hits":"1",},
{"lineNum":"  967","line":"\t\t\t\t\ttagged_fields: vec ! [","class":"linePartCov","hits":"2","order":"3814","possible_hits":"4",},
{"lineNum":"  968","line":"\t\t\t\t\t\tPaymentHash(Sha256(sha256::Hash::from_hex(","class":"lineCov","hits":"1","order":"3815","possible_hits":"1",},
{"lineNum":"  969","line":"\t\t\t\t\t\t\t\"0001020304050607080900010203040506070809000102030405060708090102\""},
{"lineNum":"  970","line":"\t\t\t\t\t\t).unwrap())).into(),"},
{"lineNum":"  971","line":"\t\t\t\t\t\tDescription(","class":"lineCov","hits":"1","order":"3821","possible_hits":"1",},
{"lineNum":"  972","line":"\t\t\t\t\t\t\t::Description::new(","class":"lineCov","hits":"1","order":"3820","possible_hits":"1",},
{"lineNum":"  973","line":"\t\t\t\t\t\t\t\t\"Please consider supporting this project\".to_owned()","class":"lineCov","hits":"1","order":"3819","possible_hits":"1",},
{"lineNum":"  974","line":"\t\t\t\t\t\t\t).unwrap()"},
{"lineNum":"  975","line":"\t\t\t\t\t\t).into(),"},
{"lineNum":"  976","line":"\t\t\t\t\t],"},
{"lineNum":"  977","line":"\t\t\t\t\t},"},
{"lineNum":"  978","line":"\t\t\t\t\t},"},
{"lineNum":"  979","line":"\t\t\t\thash: [","class":"lineCov","hits":"1","order":"3824","possible_hits":"1",},
{"lineNum":"  980","line":"\t\t\t\t\t0xc3, 0xd4, 0xe8, 0x3f, 0x64, 0x6f, 0xa7, 0x9a, 0x39, 0x3d, 0x75, 0x27,"},
{"lineNum":"  981","line":"\t\t\t\t\t0x7b, 0x1d, 0x85, 0x8d, 0xb1, 0xd1, 0xf7, 0xab, 0x71, 0x37, 0xdc, 0xb7,"},
{"lineNum":"  982","line":"\t\t\t\t\t0x83, 0x5d, 0xb2, 0xec, 0xd5, 0x18, 0xe1, 0xc9"},
{"lineNum":"  983","line":"\t\t\t\t],"},
{"lineNum":"  984","line":"\t\t\t\tsignature: Signature(RecoverableSignature::from_compact(","class":"lineCov","hits":"1","order":"3826","possible_hits":"1",},
{"lineNum":"  985","line":"\t\t\t\t\t& ["},
{"lineNum":"  986","line":"\t\t\t\t\t\t0x38u8, 0xec, 0x68, 0x91, 0x34, 0x5e, 0x20, 0x41, 0x45, 0xbe, 0x8a,"},
{"lineNum":"  987","line":"\t\t\t\t\t\t0x3a, 0x99, 0xde, 0x38, 0xe9, 0x8a, 0x39, 0xd6, 0xa5, 0x69, 0x43,"},
{"lineNum":"  988","line":"\t\t\t\t\t\t0x4e, 0x18, 0x45, 0xc8, 0xaf, 0x72, 0x05, 0xaf, 0xcf, 0xcc, 0x7f,"},
{"lineNum":"  989","line":"\t\t\t\t\t\t0x42, 0x5f, 0xcd, 0x14, 0x63, 0xe9, 0x3c, 0x32, 0x88, 0x1e, 0xad,"},
{"lineNum":"  990","line":"\t\t\t\t\t\t0x0d, 0x6e, 0x35, 0x6d, 0x46, 0x7e, 0xc8, 0xc0, 0x25, 0x53, 0xf9,"},
{"lineNum":"  991","line":"\t\t\t\t\t\t0xaa, 0xb1, 0x5e, 0x57, 0x38, 0xb1, 0x1f, 0x12, 0x7f"},
{"lineNum":"  992","line":"\t\t\t\t\t],"},
{"lineNum":"  993","line":"\t\t\t\t\tRecoveryId::from_i32(0).unwrap()","class":"lineCov","hits":"2","order":"3825","possible_hits":"2",},
{"lineNum":"  994","line":"\t\t\t\t).unwrap()),"},
{"lineNum":"  995","line":"\t\t\t\t}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  996","line":"\t\t\t)"},
{"lineNum":"  997","line":"\t\t)"},
{"lineNum":"  998","line":"\t}","class":"linePartCov","hits":"2","order":"4002","possible_hits":"5",},
{"lineNum":"  999","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "lightning_invoice-99c93907235ac8b4", "date" : "2019-08-31 07:54:49", "instrumented" : 409, "covered" : 346,};
var merged_data = [];
